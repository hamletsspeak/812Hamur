{"version":3,"file":"static/js/340.e090a060.chunk.js","mappings":"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","sources":["components/Auth.js","services/storageService.js","components/Toast.js","Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport { RecaptchaVerifier } from 'firebase/auth';\nimport { auth } from '../firebase';\n\nconst Auth = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [authMethod, setAuthMethod] = useState('email');\n  const [isLogin, setIsLogin] = useState(false);\n  const [showVerificationInput, setShowVerificationInput] = useState(false);\n  const [error, setError] = useState('');\n  const { login, signup, loginAnonymously, setupRecaptcha, confirmPhoneCode, loginWithGithub } = useAuth();\n\n  const getErrorMessage = (errorCode) => {\n    switch (errorCode) {\n      case 'auth/user-not-found':\n        return 'Пользователь с таким email не найден';\n      case 'auth/wrong-password':\n        return 'Неверный пароль';\n      case 'auth/email-already-in-use':\n        return 'Пользователь с таким email уже существует';\n      case 'auth/weak-password':\n        return 'Пароль должен содержать минимум 6 символов';\n      case 'auth/invalid-email':\n        return 'Некорректный email адрес';\n      case 'auth/invalid-phone-number':\n        return 'Неверный формат номера телефона';\n      case 'auth/invalid-verification-code':\n        return 'Неверный код подтверждения';\n      case 'auth/account-exists-with-different-credential':\n        return 'Аккаунт уже существует с другим методом входа';\n      case 'auth/popup-closed-by-user':\n        return 'Окно авторизации было закрыто. Попробуйте еще раз';\n      case 'auth/cancelled-popup-request':\n        return 'Предыдущий запрос авторизации не был завершен';\n      case 'auth/popup-blocked':\n        return 'Всплывающее окно заблокировано браузером. Пожалуйста, разрешите всплывающие окна для этого сайта';\n      case 'auth/unauthorized-domain':\n        return 'Этот домен не авторизован для работы с Firebase. Пожалуйста, проверьте настройки Firebase';\n      default:\n        return 'Произошла ошибка при авторизации';\n    }\n  };\n\n  useEffect(() => {\n    // Очищаем старый рекапчу при размонтировании\n    return () => {\n      if (window.recaptchaVerifier) {\n        window.recaptchaVerifier.clear();\n      }\n    };\n  }, []);\n\n  const setupRecaptchaVerifier = () => {\n    if (!window.recaptchaVerifier) {\n      window.recaptchaVerifier = new RecaptchaVerifier(auth, 'recaptcha-container', {\n        size: 'invisible',\n        callback: () => {\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\n        },\n        'expired-callback': () => {\n          // Response expired. Ask user to solve reCAPTCHA again.\n          setError('Время действия проверки истекло. Попробуйте еще раз.');\n        }\n      });\n    }\n  };\n\n  const formatPhoneNumber = (phone) => {\n    // Убираем все нецифровые символы\n    const cleaned = phone.replace(/\\D/g, '');\n    // Добавляем '+' в начало, если его нет\n    return cleaned.startsWith('+') ? cleaned : `+${cleaned}`;\n  };\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    \n    try {\n      if (isLogin) {\n        await login(email, password);\n      } else {\n        if (password !== confirmPassword) {\n          setError('Пароли не совпадают');\n          return;\n        }\n        await signup(email, password);\n      }\n    } catch (err) {\n      setError(getErrorMessage(err.code));\n    }\n  };\n\n  const handlePhoneSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      if (!showVerificationInput) {\n        setupRecaptchaVerifier();\n        const formattedPhone = formatPhoneNumber(phoneNumber);\n        console.log('Отправка кода на номер:', formattedPhone);\n        const appVerifier = window.recaptchaVerifier;\n        await setupRecaptcha(formattedPhone, appVerifier);\n        setShowVerificationInput(true);\n      } else {\n        if (!verificationCode || verificationCode.length < 6) {\n          setError('Введите корректный код подтверждения');\n          return;\n        }\n        console.log('Подтверждение кода:', verificationCode);\n        await confirmPhoneCode(verificationCode);\n      }\n    } catch (err) {\n      console.error('Ошибка телефонной авторизации:', err);\n      \n      if (err.code === 'auth/invalid-verification-code') {\n        setError('Неверный код подтверждения');\n      } else if (err.code === 'auth/invalid-phone-number') {\n        setError('Неверный формат номера телефона');\n      } else if (err.code === 'auth/code-expired') {\n        setError('Срок действия кода истек. Попробуйте получить новый код');\n        setShowVerificationInput(false);\n      } else if (err.code === 'auth/too-many-requests') {\n        setError('Слишком много попыток. Попробуйте позже');\n      } else if (err.message) {\n        setError(err.message);\n      } else {\n        setError('Произошла ошибка при авторизации');\n      }\n      \n      // Очищаем reCAPTCHA только если это не ошибка кода подтверждения\n      if (err.code !== 'auth/invalid-verification-code') {\n        if (window.recaptchaVerifier) {\n          window.recaptchaVerifier.clear();\n          window.recaptchaVerifier = null;\n        }\n        setShowVerificationInput(false);\n      }\n    }\n  };\n\n  const handleAnonymousLogin = async () => {\n    setError('');\n    try {\n      await loginAnonymously();\n    } catch (err) {\n      setError(getErrorMessage(err.code));\n    }\n  };\n\n  const handleGithubLogin = async () => {\n    setError('');\n    try {\n      console.log('Начинаем GitHub авторизацию...');\n      await loginWithGithub();\n    } catch (err) {\n      console.error('Ошибка GitHub авторизации:', err);\n      if (err.code) {\n        setError(getErrorMessage(err.code));\n      } else if (err.message) {\n        setError(err.message);\n      } else {\n        setError('Произошла непредвиденная ошибка при авторизации через GitHub');\n      }\n    }\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setPhoneNumber('');\n    setVerificationCode('');\n    setShowVerificationInput(false);\n    setError('');\n  };\n\n  const switchAuthMode = () => {\n    setIsLogin(!isLogin);\n    resetForm();\n  };\n\n  return (\n    <div className=\"min-h-[calc(100vh-4rem)] bg-[#121212] flex flex-col items-center justify-center px-6\">\n      <div className=\"w-full max-w-md bg-[#1f1f1f] p-8 rounded-lg shadow-lg\">\n        <h2 className=\"text-2xl font-bold text-white mb-6 text-center\">\n          {isLogin ? 'Вход в аккаунт' : 'Создание аккаунта'}\n        </h2>\n\n        <div className=\"flex justify-center gap-4 mb-6\">\n          <button\n            onClick={() => {\n              setAuthMethod('email');\n              resetForm();\n            }}\n            className={`px-4 py-2 rounded ${\n              authMethod === 'email' ? 'bg-blue-500' : 'bg-gray-700'\n            } text-white`}\n          >\n            Email\n          </button>\n          <button\n            onClick={() => {\n              setAuthMethod('github');\n              resetForm();\n            }}\n            className={`px-4 py-2 rounded ${\n              authMethod === 'github' ? 'bg-blue-500' : 'bg-gray-700'\n            } text-white flex items-center gap-2`}\n          >\n            <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5 fill-current\">\n              <path d=\"M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z\"/>\n            </svg>\n            GitHub\n          </button>\n          {isLogin && (\n            <button\n              onClick={() => {\n                setAuthMethod('anonymous');\n                resetForm();\n              }}\n              className={`px-4 py-2 rounded ${\n                authMethod === 'anonymous' ? 'bg-blue-500' : 'bg-gray-700'\n              } text-white`}\n            >\n              Анонимно\n            </button>\n          )}\n        </div>\n\n        {error && (\n          <div className=\"bg-red-500/20 border border-red-500 text-red-100 p-4 rounded mb-6\">\n            {error}\n          </div>\n        )}\n\n        {authMethod === 'email' && (\n          <form onSubmit={handleEmailSubmit} className=\"flex flex-col gap-4\">\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"p-3 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 outline-none transition-colors\"\n              required\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Пароль\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"p-3 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 outline-none transition-colors\"\n              required\n            />\n            {!isLogin && (\n              <input\n                type=\"password\"\n                placeholder=\"Подтвердите пароль\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                className=\"p-3 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 outline-none transition-colors\"\n                required\n              />\n            )}\n            <button\n              type=\"submit\"\n              className=\"bg-blue-500 text-white px-6 py-3 rounded hover:bg-blue-600 transition-colors font-semibold\"\n            >\n              {isLogin ? 'Войти' : 'Создать аккаунт'}\n            </button>\n          </form>\n        )}\n\n        {authMethod === 'phone' && (\n          <form onSubmit={handlePhoneSubmit} className=\"flex flex-col gap-4\">\n            <div className=\"phone-input-container\">\n              <PhoneInput\n                country={'ru'}\n                value={phoneNumber}\n                onChange={(phone) => {\n                  console.log('Введен номер телефона:', phone);\n                  setPhoneNumber(phone);\n                }}\n                disabled={showVerificationInput}\n                containerClass=\"phone-input\"\n                inputClass=\"!w-full !h-12 !text-white !bg-gray-700 !border-gray-600 !pl-12 !rounded\"\n                buttonClass=\"!bg-gray-700 !border-gray-600 !rounded-l\"\n                dropdownClass=\"!bg-gray-700 !text-white\"\n                searchClass=\"!bg-gray-800 !text-white\"\n                enableSearch={true}\n                searchPlaceholder=\"Поиск страны...\"\n                inputProps={{\n                  required: true,\n                  placeholder: \"Номер телефона\"\n                }}\n              />\n            </div>\n            {showVerificationInput && (\n              <input\n                type=\"text\"\n                placeholder=\"Код подтверждения\"\n                value={verificationCode}\n                onChange={(e) => {\n                  console.log('Введен код:', e.target.value);\n                  setVerificationCode(e.target.value);\n                }}\n                className=\"p-3 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 outline-none transition-colors\"\n                required\n              />\n            )}\n            <div id=\"recaptcha-container\"></div>\n            <button\n              type=\"submit\"\n              className=\"bg-blue-500 text-white px-6 py-3 rounded hover:bg-blue-600 transition-colors font-semibold\"\n            >\n              {showVerificationInput ? 'Подтвердить код' : (isLogin ? 'Войти' : 'Создать аккаунт')}\n            </button>\n          </form>\n        )}\n\n        {authMethod === 'github' && (\n          <button\n            onClick={handleGithubLogin}\n            className=\"w-full bg-gray-800 text-white px-6 py-3 rounded hover:bg-gray-700 transition-colors font-semibold flex items-center justify-center gap-2\"\n          >\n            <svg viewBox=\"0 0 24 24\" className=\"w-6 h-6 fill-current\">\n              <path d=\"M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z\"/>\n            </svg>\n            {isLogin ? 'Войти через GitHub' : 'Зарегистрироваться через GitHub'}\n          </button>\n        )}\n\n        {authMethod === 'anonymous' && (\n          <button\n            onClick={handleAnonymousLogin}\n            className=\"w-full bg-blue-500 text-white px-6 py-3 rounded hover:bg-blue-600 transition-colors font-semibold\"\n          >\n            Войти анонимно\n          </button>\n        )}\n\n        <button\n          onClick={switchAuthMode}\n          className=\"text-blue-400 mt-6 hover:underline w-full text-center\"\n        >\n          {isLogin ? 'Создать новый аккаунт' : 'Уже есть аккаунт? Войти'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;","import { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { auth } from '../firebase';\n\nconst storage = getStorage();\n\nconst compressImage = async (file) => {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = (e) => {\n      const img = new Image();\n      img.src = e.target.result;\n      img.onload = () => {\n        const canvas = document.createElement('canvas');\n        const MAX_SIZE = 800; // максимальный размер стороны изображения\n        let width = img.width;\n        let height = img.height;\n\n        if (width > height) {\n          if (width > MAX_SIZE) {\n            height *= MAX_SIZE / width;\n            width = MAX_SIZE;\n          }\n        } else {\n          if (height > MAX_SIZE) {\n            width *= MAX_SIZE / height;\n            height = MAX_SIZE;\n          }\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0, width, height);\n\n        canvas.toBlob((blob) => {\n          resolve(new File([blob], file.name, {\n            type: 'image/jpeg',\n            lastModified: Date.now()\n          }));\n        }, 'image/jpeg', 0.8); // качество 0.8\n      };\n    };\n  });\n};\n\nexport const uploadUserAvatar = async (file) => {\n  if (!auth.currentUser) {\n    throw new Error('Пользователь не авторизован');\n  }\n\n  try {\n    // Оптимизируем изображение перед загрузкой\n    const optimizedFile = await compressImage(file);\n    \n    const fileRef = ref(storage, `avatars/${auth.currentUser.uid}/${file.name}`);\n    const snapshot = await uploadBytes(fileRef, optimizedFile);\n    const downloadURL = await getDownloadURL(snapshot.ref);\n    return downloadURL;\n  } catch (error) {\n    console.error('Ошибка при загрузке файла:', error);\n    throw new Error('Ошибка при загрузке аватара');\n  }\n};","import React, { useEffect } from 'react';\n\nconst Toast = ({ message, type = 'success', onClose, duration = 3000 }) => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, duration);\n\n    return () => clearTimeout(timer);\n  }, [duration, onClose]);\n\n  const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';\n\n  return (\n    <div className=\"fixed inset-x-0 top-4 mx-auto z-50 flex justify-center animate-fade-in-down\">\n      <div className={`${bgColor} text-white px-6 py-3 rounded-lg shadow-lg max-w-sm text-center`}>\n        {message}\n      </div>\n    </div>\n  );\n};\n\nexport default Toast;","import React, { useState, useRef, useEffect } from 'react';\nimport { useAuth } from './contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport Auth from './components/Auth';\nimport { uploadUserAvatar } from './services/storageService';\nimport { subscribeToUserData } from './services/databaseService';\nimport Toast from './components/Toast';\n\nconst Profile = () => {\n  const { user, logout, updateUserProfile, updateUserPassword } = useAuth();\n  const navigate = useNavigate();\n  const [isEditing, setIsEditing] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    displayName: user?.displayName || '',\n    about: '',\n    skills: []\n  });\n  const [userData, setUserData] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n  const [toast, setToast] = useState({ show: false, message: '', type: 'success' });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAvatarLoading, setIsAvatarLoading] = useState(false);\n  const fileInputRef = useRef();\n\n  useEffect(() => {\n    let unsubscribe;\n    \n    if (user) {\n      unsubscribe = subscribeToUserData(user.uid, (data) => {\n        setUserData(data);\n        setUserInfo(prev => ({\n          ...prev,\n          displayName: data?.displayName || user.displayName || '',\n          about: data?.about || '',\n          skills: data?.skills || []\n        }));\n      });\n    }\n\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, [user]);\n\n  const showToast = (message, type = 'success') => {\n    setToast({ show: true, message, type });\n  };\n\n  const hideToast = () => {\n    setToast({ show: false, message: '', type: 'success' });\n  };\n\n  const handleLogout = async () => {\n    setIsLoading(true);\n    try {\n      await logout();\n      navigate('/');\n    } catch (err) {\n      showToast('Ошибка при выходе из системы. Попробуйте еще раз', 'error');\n      console.error('Ошибка при выходе:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleBack = () => {\n    navigate('/');\n  };\n\n  const handleSaveProfile = async () => {\n    try {\n      await updateUserProfile({\n        displayName: userInfo.displayName,\n        photoURL: user.photoURL,\n        about: userInfo.about,\n        skills: userInfo.skills\n      });\n      showToast('Профиль успешно обновлен');\n      setIsEditing(false);\n    } catch (err) {\n      console.error('Ошибка при обновлении профиля:', err);\n      showToast('Ошибка при обновлении профиля', 'error');\n    }\n  };\n\n  const handleChangePassword = async () => {\n    try {\n      if (newPassword.length < 6) {\n        showToast('Пароль должен быть не менее 6 символов', 'error');\n        return;\n      }\n      await updateUserPassword(newPassword);\n      showToast('Пароль успешно изменен');\n      setNewPassword('');\n    } catch (err) {\n      showToast('Ошибка при смене пароля', 'error');\n    }\n  };\n\n  const handleAvatarClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      try {\n        setIsAvatarLoading(true);\n        \n        // Проверяем размер файла (не более 5MB)\n        if (file.size > 5 * 1024 * 1024) {\n          showToast('Размер файла не должен превышать 5MB', 'error');\n          return;\n        }\n        \n        const photoURL = await uploadUserAvatar(file);\n        const updatedUser = await updateUserProfile({\n          ...userInfo,\n          photoURL\n        });\n        \n        // Обновляем UI только если обновление успешно\n        if (updatedUser) {\n          setUserInfo(prev => ({\n            ...prev,\n            photoURL: updatedUser.photoURL\n          }));\n          showToast('Аватар успешно обновлен');\n        }\n      } catch (err) {\n        showToast('Ошибка при загрузке аватара', 'error');\n        console.error(err);\n      } finally {\n        setIsAvatarLoading(false);\n      }\n    }\n  };\n\n  if (!user) {\n    return <Auth />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#121212] pt-20\">\n      {toast.show && (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          onClose={hideToast}\n        />\n      )}\n      \n      <div className=\"container mx-auto px-4\">\n        <div className=\"bg-[#1f1f1f] rounded-lg p-6 max-w-2xl mx-auto\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-2xl font-bold text-white\">Профиль</h2>\n            <div className=\"flex gap-4\">\n              <button\n                onClick={handleBack}\n                className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\"\n              >\n                Назад\n              </button>\n              <button\n                onClick={handleLogout}\n                disabled={isLoading}\n                className={`bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2`}\n              >\n                {isLoading ? (\n                  <>\n                    <svg className=\"animate-spin h-5 w-5\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" />\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                    </svg>\n                    Выход...\n                  </>\n                ) : (\n                  'Выйти'\n                )}\n              </button>\n            </div>\n          </div>\n\n          <div className=\"space-y-6\">\n            {/* Основная информация */}\n            <div className=\"flex items-start gap-6\">\n              <div className=\"relative\">\n                <img\n                  src={user?.photoURL || 'https://via.placeholder.com/100'}\n                  alt=\"Аватар\"\n                  className={`w-24 h-24 rounded-full object-cover cursor-pointer ${isAvatarLoading ? 'opacity-50' : ''}`}\n                  onClick={handleAvatarClick}\n                />\n                {isAvatarLoading && (\n                  <div className=\"absolute inset-0 flex items-center justify-center\">\n                    <svg className=\"animate-spin h-8 w-8 text-white\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" />\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                    </svg>\n                  </div>\n                )}\n                <input\n                  type=\"file\"\n                  ref={fileInputRef}\n                  onChange={handleFileChange}\n                  accept=\"image/*\"\n                  className=\"hidden\"\n                />\n              </div>\n\n              <div className=\"flex-1\">\n                {isEditing ? (\n                  <div className=\"space-y-4\">\n                    <input\n                      type=\"text\"\n                      value={userInfo.displayName}\n                      onChange={(e) => setUserInfo({ ...userInfo, displayName: e.target.value })}\n                      className=\"w-full bg-[#2d2d2d] text-white p-2 rounded\"\n                      placeholder=\"Имя пользователя\"\n                    />\n                    <textarea\n                      value={userInfo.about}\n                      onChange={(e) => setUserInfo({ ...userInfo, about: e.target.value })}\n                      className=\"w-full bg-[#2d2d2d] text-white p-2 rounded h-24\"\n                      placeholder=\"О себе\"\n                    />\n                    <div>\n                      <input\n                        type=\"text\"\n                        value={userInfo.skills.join(', ')}\n                        onChange={(e) => setUserInfo({ ...userInfo, skills: e.target.value.split(',').map(s => s.trim()) })}\n                        className=\"w-full bg-[#2d2d2d] text-white p-2 rounded\"\n                        placeholder=\"Навыки (через запятую)\"\n                      />\n                    </div>\n                    <div className=\"flex gap-4\">\n                      <button\n                        onClick={handleSaveProfile}\n                        className=\"bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700\"\n                      >\n                        Сохранить\n                      </button>\n                      <button\n                        onClick={() => setIsEditing(false)}\n                        className=\"bg-gray-600 text-white px-6 py-2 rounded hover:bg-gray-700\"\n                      >\n                        Отмена\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    <div className=\"bg-[#2d2d2d] rounded-lg p-4\">\n                      <table className=\"w-full text-white\">\n                        <tbody>\n                          <tr>\n                            <td className=\"py-2 text-gray-400 w-1/3\">Имя:</td>\n                            <td className=\"py-2\">{userData?.displayName || 'Не указано'}</td>\n                          </tr>\n                          <tr>\n                            <td className=\"py-2 text-gray-400\">Email:</td>\n                            <td className=\"py-2\">{userData?.email || user?.email}</td>\n                          </tr>\n                          <tr>\n                            <td className=\"py-2 text-gray-400\">О себе:</td>\n                            <td className=\"py-2\">{userData?.about || 'Не указано'}</td>\n                          </tr>\n                          <tr>\n                            <td className=\"py-2 text-gray-400\">Навыки:</td>\n                            <td className=\"py-2\">\n                              {userData?.skills?.length ? (\n                                <div className=\"flex flex-wrap gap-2\">\n                                  {userData.skills.map((skill, index) => (\n                                    <span \n                                      key={index}\n                                      className=\"bg-blue-600 px-2 py-1 rounded-full text-sm\"\n                                    >\n                                      {skill}\n                                    </span>\n                                  ))}\n                                </div>\n                              ) : 'Не указаны'}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                    <button\n                      onClick={() => setIsEditing(true)}\n                      className=\"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 mt-4\"\n                    >\n                      Редактировать\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Смена пароля */}\n            <div className=\"w-full border-t border-gray-700 pt-4\">\n              <h3 className=\"text-white text-lg mb-4\">Безопасность</h3>\n              <div className=\"flex gap-4\">\n                <input\n                  type=\"password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  className=\"flex-1 bg-[#2d2d2d] text-white p-2 rounded\"\n                  placeholder=\"Новый пароль\"\n                />\n                <button\n                  onClick={handleChangePassword}\n                  className=\"bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700\"\n                >\n                  Сменить пароль\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;"],"names":["Auth","email","setEmail","useState","password","setPassword","confirmPassword","setConfirmPassword","phoneNumber","setPhoneNumber","verificationCode","setVerificationCode","authMethod","setAuthMethod","isLogin","setIsLogin","showVerificationInput","setShowVerificationInput","error","setError","login","signup","loginAnonymously","setupRecaptcha","confirmPhoneCode","loginWithGithub","useAuth","getErrorMessage","errorCode","useEffect","window","recaptchaVerifier","clear","resetForm","_jsx","className","children","_jsxs","onClick","viewBox","d","onSubmit","async","e","preventDefault","err","code","type","placeholder","value","onChange","target","required","length","console","log","RecaptchaVerifier","auth","size","callback","expired-callback","formattedPhone","phone","cleaned","replace","startsWith","formatPhoneNumber","appVerifier","message","PhoneInput","country","disabled","containerClass","inputClass","buttonClass","dropdownClass","searchClass","enableSearch","searchPlaceholder","inputProps","id","switchAuthMode","storage","getStorage","uploadUserAvatar","currentUser","Error","optimizedFile","Promise","resolve","reader","FileReader","readAsDataURL","file","onload","img","Image","src","result","canvas","document","createElement","MAX_SIZE","width","height","getContext","drawImage","toBlob","blob","File","name","lastModified","Date","now","compressImage","fileRef","ref","uid","snapshot","uploadBytes","getDownloadURL","_ref","onClose","duration","timer","setTimeout","clearTimeout","bgColor","Profile","_userData$skills","user","logout","updateUserProfile","updateUserPassword","navigate","useNavigate","isEditing","setIsEditing","userInfo","setUserInfo","displayName","about","skills","userData","setUserData","newPassword","setNewPassword","toast","setToast","show","isLoading","setIsLoading","isAvatarLoading","setIsAvatarLoading","fileInputRef","useRef","unsubscribe","subscribeToUserData","data","prev","showToast","arguments","undefined","Toast","hideToast","handleBack","_Fragment","cx","cy","r","stroke","strokeWidth","fill","photoURL","alt","handleAvatarClick","current","click","files","updatedUser","accept","join","split","map","s","trim","skill","index"],"sourceRoot":""}