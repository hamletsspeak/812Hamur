{"version":3,"file":"static/js/879.f8b022ac.chunk.js","mappings":"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","sources":["services/githubService.js","Projects.js"],"sourcesContent":["import axios from 'axios';\n\nconst GITHUB_API_URL = 'https://api.github.com';\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 минут\n\nclass Cache {\n  constructor() {\n    this.data = new Map();\n  }\n\n  set(key, value) {\n    this.data.set(key, {\n      value,\n      timestamp: Date.now()\n    });\n  }\n\n  get(key) {\n    const item = this.data.get(key);\n    if (!item) return null;\n    \n    const isExpired = Date.now() - item.timestamp > CACHE_DURATION;\n    if (isExpired) {\n      this.data.delete(key);\n      return null;\n    }\n    \n    return item.value;\n  }\n\n  clear() {\n    this.data.clear();\n  }\n}\n\nconst cache = new Cache();\n\nexport const getRepositories = async () => {\n  try {\n    const cachedData = cache.get('repositories');\n    if (cachedData) {\n      console.log('Используются кэшированные данные');\n      return cachedData;\n    }\n\n    console.log('Начинаем загрузку репозиториев...');\n    \n    const headers = {\n      'Accept': 'application/vnd.github.v3+json'\n    };\n\n    // Добавляем токен только если он существует\n    if (process.env.REACT_APP_GITHUB_TOKEN) {\n      headers.Authorization = `token ${process.env.REACT_APP_GITHUB_TOKEN}`;\n    }\n\n    const response = await axios.get(`${GITHUB_API_URL}/users/hamletsspeak/repos`, {\n      headers,\n      timeout: 10000 // 10 секунд таймаут\n    });\n\n    if (response.status === 200 && Array.isArray(response.data)) {\n      const processedData = response.data\n        .filter(repo => !repo.fork && !repo.private)\n        .map(repo => ({\n          name: repo.name,\n          link: repo.html_url,\n          stars: repo.stargazers_count,\n          language: repo.language,\n          updatedAt: new Date(repo.updated_at)\n        }))\n        .sort((a, b) => b.updatedAt - a.updatedAt);\n\n      if (processedData.length > 0) {\n        console.log('Обработано репозиториев:', processedData.length);\n        cache.set('repositories', processedData);\n        return processedData;\n      }\n    }\n    \n    throw new Error('Не удалось получить данные о репозиториях');\n  } catch (error) {\n    console.error('Ошибка при получении репозиториев:', error);\n    \n    if (error.code === 'ECONNABORTED') {\n      throw new Error('Превышено время ожидания запроса. Проверьте подключение к интернету.');\n    }\n    \n    if (error.response) {\n      const { status, data } = error.response;\n      \n      if (status === 403) {\n        throw new Error('Превышен лимит запросов к GitHub API. Пожалуйста, подождите несколько минут.');\n      }\n      \n      if (status === 404) {\n        throw new Error('Пользователь не найден или репозитории недоступны.');\n      }\n      \n      throw new Error(`Ошибка GitHub API: ${data.message || 'Неизвестная ошибка'}`);\n    }\n    \n    throw new Error('Не удалось подключиться к GitHub. Проверьте подключение к интернету.');\n  }\n};","import React, { useState, useEffect, memo } from 'react';\nimport { m, AnimatePresence } from './config/animations';\nimport { fadeInFromRightVariant, zoomRotateVariant, useScrollAnimation } from './config/animations';\nimport { getRepositories } from './services/githubService';\n\nconst ProjectCard = memo(({ project, onViewGithub, direction }) => {\n  const scrollAnimation = useScrollAnimation(0.3);\n  \n  return (\n    <m.div\n      variants={fadeInFromRightVariant}\n      {...scrollAnimation}\n      className=\"bg-[#222] text-white rounded-lg shadow-lg p-6 w-full max-w-md border border-white/10\"\n    >\n      <h3 className=\"text-xl sm:text-2xl font-bold mb-3 text-blue-400\">{project.name}</h3>\n      <p className=\"mt-2 sm:mt-4 text-sm sm:text-base text-gray-300 leading-relaxed\">{project.description}</p>\n      {project.language && (\n        <p className=\"mt-2 sm:mt-4 text-sm sm:text-base text-blue-400 font-medium\">Технология: {project.language}</p>\n      )}\n      {project.stars > 0 && (\n        <p className=\"mt-2 text-sm sm:text-base text-yellow-400 font-medium\">⭐ {project.stars}</p>\n      )}\n      <m.button\n        onClick={() => onViewGithub(project.link)}\n        className=\"relative mt-4 sm:mt-6 bg-blue-500 text-white px-4 sm:px-6 py-2 sm:py-3 text-sm sm:text-base rounded-lg hover:bg-blue-600 transition-all duration-300 transform hover:scale-105 font-medium overflow-hidden group\"\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n      >\n        <m.span\n          className=\"absolute inset-0 bg-white/30 translate-y-full\"\n          initial={{ translateY: \"100%\" }}\n          whileTap={{ \n            translateY: \"0%\",\n            transition: { duration: 0.2 }\n          }}\n        />\n        <span className=\"relative z-10\">Смотреть на GitHub</span>\n      </m.button>\n    </m.div>\n  );\n});\n\nProjectCard.displayName = 'ProjectCard';\n\nconst NavigationButton = ({ onClick, direction, children }) => (\n  <m.button\n    onClick={onClick}\n    className=\"bg-blue-500/80 backdrop-blur-sm text-white w-10 h-10 sm:w-12 sm:h-12 rounded-full hover:bg-blue-600 transition-all duration-300 flex items-center justify-center text-base sm:text-lg relative group\"\n    whileHover={{ scale: 1.1 }}\n    whileTap={{ scale: 0.9 }}\n    initial={{ opacity: 0, x: direction === 'left' ? -20 : 20 }}\n    animate={{ opacity: 1, x: 0 }}\n    transition={{\n      type: \"spring\",\n      stiffness: 400,\n      damping: 25\n    }}\n  >\n    <m.div\n      className=\"absolute inset-0 rounded-full bg-blue-400/20\"\n      whileHover={{ scale: 1.2 }}\n      transition={{\n        type: \"spring\",\n        stiffness: 300,\n        damping: 20\n      }}\n    />\n    <m.span\n      className=\"relative z-10\"\n      whileHover={{ x: direction === 'left' ? -4 : 4 }}\n      transition={{\n        type: \"spring\",\n        stiffness: 400,\n        damping: 25\n      }}\n    >\n      {children}\n    </m.span>\n  </m.button>\n);\n\nconst Projects = () => {\n  const titleScrollAnimation = useScrollAnimation();\n  const [current, setCurrent] = useState(0);\n  const [direction, setDirection] = useState('right');\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n\n  useEffect(() => {\n    let isMounted = true;\n    let retryTimeout;\n\n    const fetchProjects = async () => {\n      if (!navigator.onLine) {\n        setError('Отсутствует подключение к интернету. Проверьте сетевое подключение.');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const repos = await getRepositories();\n        \n        if (!isMounted) return;\n\n        if (repos && repos.length > 0) {\n          setProjects(repos);\n          setLoading(false);\n          setRetryCount(0);\n        } else {\n          if (retryCount < 2) {\n            console.log('Повторная попытка загрузки...');\n            setRetryCount(prev => prev + 1);\n            retryTimeout = setTimeout(fetchProjects, 3000);\n          } else {\n            setError('Не удалось загрузить проекты. Возможно, они временно недоступны.');\n            setLoading(false);\n          }\n        }\n      } catch (err) {\n        console.error('Ошибка при загрузке проектов:', err);\n        if (!isMounted) return;\n        \n        setError(err.message || 'Произошла неизвестная ошибка при загрузке проектов');\n        setLoading(false);\n      }\n    };\n\n    window.addEventListener('online', fetchProjects);\n    window.addEventListener('offline', () => {\n      setError('Отсутствует подключение к интернету');\n      setLoading(false);\n    });\n\n    fetchProjects();\n\n    return () => {\n      isMounted = false;\n      window.removeEventListener('online', fetchProjects);\n      window.removeEventListener('offline', () => {});\n      if (retryTimeout) {\n        clearTimeout(retryTimeout);\n      }\n    };\n  }, [retryCount]);\n\n  const handleViewGithub = (link) => {\n    window.open(link, '_blank', 'noopener,noreferrer');\n  };\n\n  const handlePrev = () => {\n    setDirection('left');\n    setCurrent(prev => (prev - 1 + projects.length) % projects.length);\n  };\n\n  const handleNext = () => {\n    setDirection('right');\n    setCurrent(prev => (prev + 1) % projects.length);\n  };\n\n  const handleRetry = () => {\n    if (!navigator.onLine) {\n      setError('Проверьте подключение к интернету и попробуйте снова');\n      return;\n    }\n    setRetryCount(0);\n    setLoading(true);\n  };\n\n  if (loading) {\n    return (\n      <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center p-8\">\n        <div className=\"w-full max-w-4xl mx-auto text-center\">\n          <h2 className=\"text-5xl font-bold mb-12 shimmer-text\">Мои проекты</h2>\n          <div className=\"space-y-6 w-full max-w-md mx-auto\">\n            <div className=\"h-8 bg-gray-700 rounded-lg animate-pulse\"></div>\n            <div className=\"h-32 bg-gray-700 rounded-lg animate-pulse\"></div>\n            <div className=\"flex justify-center gap-6 mt-8\">\n              <div className=\"h-12 w-24 bg-gray-700 rounded-lg animate-pulse\"></div>\n              <div className=\"h-12 w-24 bg-gray-700 rounded-lg animate-pulse\"></div>\n            </div>\n            <p className=\"text-center text-gray-400 mt-6\">\n              {retryCount > 0 ? `Повторная попытка ${retryCount}/2...` : 'Загрузка проектов...'}\n            </p>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  if (error) {\n    return (\n      <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center p-8\">\n        <div className=\"w-full max-w-4xl mx-auto text-center\">\n          <h2 className=\"text-5xl font-bold mb-12 shimmer-text\">Мои проекты</h2>\n          <div className=\"bg-red-500/10 border border-red-500/50 rounded-lg p-6 max-w-md mx-auto\">\n            <div className=\"text-red-400 mb-6\">{error}</div>\n            <button\n              onClick={handleRetry}\n              className=\"bg-blue-500 text-white px-8 py-3 rounded-lg hover:bg-blue-600 transition-all duration-300 transform hover:scale-105 font-medium\"\n            >\n              Попробовать снова\n            </button>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center p-2 sm:p-4\">\n      <div className=\"w-full max-w-4xl mx-auto text-center px-2\">\n        <m.h2 \n          className=\"text-5xl sm:text-7xl font-bold mb-6 sm:mb-8 shimmer-text\"\n          variants={zoomRotateVariant}\n          {...titleScrollAnimation}\n        >\n          Мои проекты\n        </m.h2>\n        \n        <div className=\"flex flex-col items-center\">\n          {projects.length > 0 ? (\n            <>\n              <div className=\"relative w-full min-h-[300px] sm:min-h-[350px] flex items-center justify-center mb-4 sm:mb-6\">\n                <AnimatePresence mode=\"wait\" initial={false}>\n                  <ProjectCard\n                    key={current}\n                    project={projects[current]}\n                    onViewGithub={handleViewGithub}\n                    direction={direction}\n                  />\n                </AnimatePresence>\n              </div>\n              \n              <div className=\"flex items-center justify-center gap-4 sm:gap-6 w-full mt-2 sm:mt-4\">\n                <NavigationButton onClick={handlePrev} direction=\"left\">←</NavigationButton>\n                \n                <m.div \n                  key={current}\n                  initial={{ opacity: 0, y: 5 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -5 }}\n                  transition={{\n                    type: \"spring\",\n                    stiffness: 300,\n                    damping: 25\n                  }}\n                  className=\"bg-blue-500/20 backdrop-blur-sm px-4 py-1.5 rounded-full text-white/90\"\n                >\n                  <m.span \n                    className=\"text-base sm:text-lg font-medium\"\n                    whileHover={{ scale: 1.1 }}\n                    transition={{\n                      type: \"spring\",\n                      stiffness: 400,\n                      damping: 25\n                    }}\n                  >\n                    {current + 1} / {projects.length}\n                  </m.span>\n                </m.div>\n\n                <NavigationButton onClick={handleNext} direction=\"right\">→</NavigationButton>\n              </div>\n            </>\n          ) : (\n            <m.div \n              className=\"bg-[#2a2a2a] rounded-lg p-8 max-w-md mx-auto\"\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{\n                type: \"spring\",\n                stiffness: 300,\n                damping: 25\n              }}\n            >\n              <p className=\"text-gray-400 mb-6 text-lg\">Проекты не найдены</p>\n              <m.button\n                onClick={handleRetry}\n                className=\"bg-blue-500 text-white px-8 py-3 rounded-lg hover:bg-blue-600 transition-all duration-300 transform hover:scale-105 font-medium\"\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                Обновить\n              </m.button>\n            </m.div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(Projects);\n"],"names":["cache","constructor","this","data","Map","set","key","value","timestamp","Date","now","get","item","delete","clear","ProjectCard","memo","_ref","project","onViewGithub","direction","scrollAnimation","useScrollAnimation","_jsxs","m","div","variants","fadeInFromRightVariant","className","children","_jsx","name","description","language","stars","button","onClick","link","whileHover","scale","whileTap","span","initial","translateY","transition","duration","displayName","NavigationButton","_ref2","opacity","x","animate","type","stiffness","damping","Projects","titleScrollAnimation","current","setCurrent","useState","setDirection","projects","setProjects","loading","setLoading","error","setError","retryCount","setRetryCount","useEffect","retryTimeout","isMounted","fetchProjects","async","navigator","onLine","repos","cachedData","console","log","headers","process","REACT_APP_GITHUB_TOKEN","Authorization","response","axios","timeout","status","Array","isArray","processedData","filter","repo","fork","private","map","html_url","stargazers_count","updatedAt","updated_at","sort","a","b","length","Error","code","message","getRepositories","prev","setTimeout","err","window","addEventListener","removeEventListener","clearTimeout","handleRetry","id","h2","zoomRotateVariant","_Fragment","AnimatePresence","mode","open","handlePrev","y","exit","handleNext"],"sourceRoot":""}