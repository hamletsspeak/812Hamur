{"version":3,"file":"static/js/520.a1732ae7.chunk.js","mappings":"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","sources":["services/storageService.js","components/Toast.js","Profile.js"],"sourcesContent":["import { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { auth } from '../firebase';\n\nconst storage = getStorage();\n\nconst compressImage = async (file) => {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = (e) => {\n      const img = new Image();\n      img.src = e.target.result;\n      img.onload = () => {\n        const canvas = document.createElement('canvas');\n        const MAX_SIZE = 800; // максимальный размер стороны изображения\n        let width = img.width;\n        let height = img.height;\n\n        if (width > height) {\n          if (width > MAX_SIZE) {\n            height *= MAX_SIZE / width;\n            width = MAX_SIZE;\n          }\n        } else {\n          if (height > MAX_SIZE) {\n            width *= MAX_SIZE / height;\n            height = MAX_SIZE;\n          }\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0, width, height);\n\n        canvas.toBlob((blob) => {\n          resolve(new File([blob], file.name, {\n            type: 'image/jpeg',\n            lastModified: Date.now()\n          }));\n        }, 'image/jpeg', 0.8); // качество 0.8\n      };\n    };\n  });\n};\n\nexport const uploadUserAvatar = async (file) => {\n  if (!auth.currentUser) {\n    throw new Error('Пользователь не авторизован');\n  }\n\n  try {\n    // Оптимизируем изображение перед загрузкой\n    const optimizedFile = await compressImage(file);\n    \n    const fileRef = ref(storage, `avatars/${auth.currentUser.uid}/${file.name}`);\n    const snapshot = await uploadBytes(fileRef, optimizedFile);\n    const downloadURL = await getDownloadURL(snapshot.ref);\n    return downloadURL;\n  } catch (error) {\n    console.error('Ошибка при загрузке файла:', error);\n    throw new Error('Ошибка при загрузке аватара');\n  }\n};","import React, { useEffect } from 'react';\n\nconst Toast = ({ message, type = 'success', onClose, duration = 3000 }) => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, duration);\n\n    return () => clearTimeout(timer);\n  }, [duration, onClose]);\n\n  const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';\n\n  return (\n    <div className=\"fixed inset-x-0 top-4 mx-auto z-50 flex justify-center animate-fade-in-down\">\n      <div className={`${bgColor} text-white px-6 py-3 rounded-lg shadow-lg max-w-sm text-center`}>\n        {message}\n      </div>\n    </div>\n  );\n};\n\nexport default Toast;","import React, { useState, useRef, useEffect } from 'react';\nimport { useAuth } from './contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport Auth from './components/Auth';\nimport { uploadUserAvatar } from './services/storageService';\nimport { subscribeToUserData } from './services/databaseService';\nimport Toast from './components/Toast';\n\nconst Profile = () => {\n  const { user, logout, updateUserProfile, updateUserPassword } = useAuth();\n  const navigate = useNavigate();\n  const [isEditing, setIsEditing] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    displayName: user?.displayName || '',\n    about: '',\n    skills: []\n  });\n  const [userData, setUserData] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n  const [toast, setToast] = useState({ show: false, message: '', type: 'success' });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAvatarLoading, setIsAvatarLoading] = useState(false);\n  const fileInputRef = useRef();\n\n  useEffect(() => {\n    let unsubscribe;\n    \n    if (user) {\n      unsubscribe = subscribeToUserData(user.uid, (data) => {\n        setUserData(data);\n        setUserInfo(prev => ({\n          ...prev,\n          displayName: data?.displayName || user.displayName || '',\n          about: data?.about || '',\n          skills: data?.skills || []\n        }));\n      });\n    }\n\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, [user]);\n\n  const showToast = (message, type = 'success') => {\n    setToast({ show: true, message, type });\n  };\n\n  const hideToast = () => {\n    setToast({ show: false, message: '', type: 'success' });\n  };\n\n  const handleLogout = async () => {\n    setIsLoading(true);\n    try {\n      await logout();\n      navigate('/');\n    } catch (err) {\n      showToast('Ошибка при выходе из системы. Попробуйте еще раз', 'error');\n      console.error('Ошибка при выходе:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleBack = () => {\n    navigate('/');\n  };\n\n  const handleSaveProfile = async () => {\n    try {\n      await updateUserProfile({\n        displayName: userInfo.displayName,\n        photoURL: user.photoURL,\n        about: userInfo.about,\n        skills: userInfo.skills\n      });\n      showToast('Профиль успешно обновлен');\n      setIsEditing(false);\n    } catch (err) {\n      console.error('Ошибка при обновлении профиля:', err);\n      showToast('Ошибка при обновлении профиля', 'error');\n    }\n  };\n\n  const handleChangePassword = async () => {\n    try {\n      if (newPassword.length < 6) {\n        showToast('Пароль должен быть не менее 6 символов', 'error');\n        return;\n      }\n      await updateUserPassword(newPassword);\n      showToast('Пароль успешно изменен');\n      setNewPassword('');\n    } catch (err) {\n      showToast('Ошибка при смене пароля', 'error');\n    }\n  };\n\n  const handleAvatarClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      try {\n        setIsAvatarLoading(true);\n        \n        // Проверяем размер файла (не более 5MB)\n        if (file.size > 5 * 1024 * 1024) {\n          showToast('Размер файла не должен превышать 5MB', 'error');\n          return;\n        }\n        \n        const photoURL = await uploadUserAvatar(file);\n        const updatedUser = await updateUserProfile({\n          ...userInfo,\n          photoURL\n        });\n        \n        // Обновляем UI только если обновление успешно\n        if (updatedUser) {\n          setUserInfo(prev => ({\n            ...prev,\n            photoURL: updatedUser.photoURL\n          }));\n          showToast('Аватар успешно обновлен');\n        }\n      } catch (err) {\n        showToast('Ошибка при загрузке аватара', 'error');\n        console.error(err);\n      } finally {\n        setIsAvatarLoading(false);\n      }\n    }\n  };\n\n  if (!user) {\n    return <Auth isOpen={true} onClose={() => navigate('/')} />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#121212] pt-20\">\n      {toast.show && (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          onClose={hideToast}\n        />\n      )}\n      \n      <div className=\"container mx-auto px-4\">\n        <div className=\"bg-[#1f1f1f] rounded-lg p-6 max-w-2xl mx-auto\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-2xl font-bold text-white\">Профиль</h2>\n            <div className=\"flex gap-4\">\n              <button\n                onClick={handleBack}\n                className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\"\n              >\n                Назад\n              </button>\n              <button\n                onClick={handleLogout}\n                disabled={isLoading}\n                className={`bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2`}\n              >\n                {isLoading ? (\n                  <>\n                    <svg className=\"animate-spin h-5 w-5\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" />\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                    </svg>\n                    Выход...\n                  </>\n                ) : (\n                  'Выйти'\n                )}\n              </button>\n            </div>\n          </div>\n\n          <div className=\"space-y-6\">\n            {/* Основная информация */}\n            <div className=\"flex items-start gap-6\">\n              <div className=\"relative\">\n                <img\n                  src={user?.photoURL || 'https://via.placeholder.com/100'}\n                  alt=\"Аватар\"\n                  className={`w-24 h-24 rounded-full object-cover cursor-pointer ${isAvatarLoading ? 'opacity-50' : ''}`}\n                  onClick={handleAvatarClick}\n                />\n                {isAvatarLoading && (\n                  <div className=\"absolute inset-0 flex items-center justify-center\">\n                    <svg className=\"animate-spin h-8 w-8 text-white\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" />\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                    </svg>\n                  </div>\n                )}\n                <input\n                  type=\"file\"\n                  ref={fileInputRef}\n                  onChange={handleFileChange}\n                  accept=\"image/*\"\n                  className=\"hidden\"\n                />\n              </div>\n\n              <div className=\"flex-1\">\n                {isEditing ? (\n                  <div className=\"space-y-4\">\n                    <input\n                      type=\"text\"\n                      value={userInfo.displayName}\n                      onChange={(e) => setUserInfo({ ...userInfo, displayName: e.target.value })}\n                      className=\"w-full bg-[#2d2d2d] text-white p-2 rounded\"\n                      placeholder=\"Имя пользователя\"\n                    />\n                    <textarea\n                      value={userInfo.about}\n                      onChange={(e) => setUserInfo({ ...userInfo, about: e.target.value })}\n                      className=\"w-full bg-[#2d2d2d] text-white p-2 rounded h-24\"\n                      placeholder=\"О себе\"\n                    />\n                    <div>\n                      <input\n                        type=\"text\"\n                        value={userInfo.skills.join(', ')}\n                        onChange={(e) => setUserInfo({ ...userInfo, skills: e.target.value.split(',').map(s => s.trim()) })}\n                        className=\"w-full bg-[#2d2d2d] text-white p-2 rounded\"\n                        placeholder=\"Навыки (через запятую)\"\n                      />\n                    </div>\n                    <div className=\"flex gap-4\">\n                      <button\n                        onClick={handleSaveProfile}\n                        className=\"bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700\"\n                      >\n                        Сохранить\n                      </button>\n                      <button\n                        onClick={() => setIsEditing(false)}\n                        className=\"bg-gray-600 text-white px-6 py-2 rounded hover:bg-gray-700\"\n                      >\n                        Отмена\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    <div className=\"bg-[#2d2d2d] rounded-lg p-4\">\n                      <table className=\"w-full text-white\">\n                        <tbody>\n                          <tr>\n                            <td className=\"py-2 text-gray-400 w-1/3\">Имя:</td>\n                            <td className=\"py-2\">{userData?.displayName || 'Не указано'}</td>\n                          </tr>\n                          <tr>\n                            <td className=\"py-2 text-gray-400\">Email:</td>\n                            <td className=\"py-2\">{userData?.email || user?.email}</td>\n                          </tr>\n                          <tr>\n                            <td className=\"py-2 text-gray-400\">О себе:</td>\n                            <td className=\"py-2\">{userData?.about || 'Не указано'}</td>\n                          </tr>\n                          <tr>\n                            <td className=\"py-2 text-gray-400\">Навыки:</td>\n                            <td className=\"py-2\">\n                              {userData?.skills?.length ? (\n                                <div className=\"flex flex-wrap gap-2\">\n                                  {userData.skills.map((skill, index) => (\n                                    <span \n                                      key={index}\n                                      className=\"bg-blue-600 px-2 py-1 rounded-full text-sm\"\n                                    >\n                                      {skill}\n                                    </span>\n                                  ))}\n                                </div>\n                              ) : 'Не указаны'}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                    <button\n                      onClick={() => setIsEditing(true)}\n                      className=\"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 mt-4\"\n                    >\n                      Редактировать\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Смена пароля */}\n            <div className=\"w-full border-t border-gray-700 pt-4\">\n              <h3 className=\"text-white text-lg mb-4\">Безопасность</h3>\n              <div className=\"flex gap-4\">\n                <input\n                  type=\"password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  className=\"flex-1 bg-[#2d2d2d] text-white p-2 rounded\"\n                  placeholder=\"Новый пароль\"\n                />\n                <button\n                  onClick={handleChangePassword}\n                  className=\"bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700\"\n                >\n                  Сменить пароль\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;"],"names":["storage","getStorage","uploadUserAvatar","async","auth","currentUser","Error","optimizedFile","Promise","resolve","reader","FileReader","readAsDataURL","file","onload","e","img","Image","src","target","result","canvas","document","createElement","MAX_SIZE","width","height","getContext","drawImage","toBlob","blob","File","name","type","lastModified","Date","now","compressImage","fileRef","ref","uid","snapshot","uploadBytes","getDownloadURL","error","console","_ref","message","onClose","duration","useEffect","timer","setTimeout","clearTimeout","bgColor","_jsx","className","children","Profile","_userData$skills","user","logout","updateUserProfile","updateUserPassword","useAuth","navigate","useNavigate","isEditing","setIsEditing","useState","userInfo","setUserInfo","displayName","about","skills","userData","setUserData","newPassword","setNewPassword","toast","setToast","show","isLoading","setIsLoading","isAvatarLoading","setIsAvatarLoading","fileInputRef","useRef","unsubscribe","subscribeToUserData","data","prev","showToast","arguments","length","undefined","_jsxs","Toast","hideToast","onClick","handleBack","err","disabled","_Fragment","viewBox","cx","cy","r","stroke","strokeWidth","fill","d","photoURL","alt","handleAvatarClick","current","click","onChange","files","size","updatedUser","accept","value","placeholder","join","split","map","s","trim","email","skill","index","Auth","isOpen"],"sourceRoot":""}