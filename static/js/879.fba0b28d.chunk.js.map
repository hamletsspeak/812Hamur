{"version":3,"file":"static/js/879.fba0b28d.chunk.js","mappings":"2KAmCA,MAAMA,EAAQ,IA9Bd,MACEC,WAAAA,GACEC,KAAKC,KAAO,IAAIC,GAClB,CAEAC,GAAAA,CAAIC,EAAKC,GACPL,KAAKC,KAAKE,IAAIC,EAAK,CACjBC,QACAC,UAAWC,KAAKC,OAEpB,CAEAC,GAAAA,CAAIL,GACF,MAAMM,EAAOV,KAAKC,KAAKQ,IAAIL,GAC3B,IAAKM,EAAM,OAAO,KAGlB,OADkBH,KAAKC,MAAQE,EAAKJ,UAlBjB,KAoBjBN,KAAKC,KAAKU,OAAOP,GACV,MAGFM,EAAKL,KACd,CAEAO,KAAAA,GACEZ,KAAKC,KAAKW,OACZ,G,aC5BF,MAAMC,GAAcC,EAAAA,EAAAA,OAAKC,IAAA,IAAC,QAAEC,EAAO,aAAEC,EAAY,UAAEC,GAAWH,EAAA,OAC5DI,EAAAA,EAAAA,MAACC,EAAAA,EAAEC,IAAG,CACJC,QAAS,CACPC,QAAS,EACTC,EAAiB,UAAdN,EAAwB,IAAM,GACjCO,MAAO,KAETC,QAAS,CACPH,QAAS,EACTC,EAAG,EACHC,MAAO,GAETE,KAAM,CACJJ,QAAS,EACTC,EAAiB,UAAdN,GAAyB,GAAK,GACjCO,MAAO,KAETG,WAAY,CACVC,KAAM,SACNC,UAAW,IACXC,QAAS,IAEXC,UAAU,8MAA6MC,SAAA,EAEvNC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mDAAkDC,SAAEjB,EAAQmB,QAC1ED,EAAAA,EAAAA,KAAA,KAAGF,UAAU,kEAAiEC,SAAEjB,EAAQoB,cACvFpB,EAAQqB,WACPlB,EAAAA,EAAAA,MAAA,KAAGa,UAAU,8DAA6DC,SAAA,CAAC,iEAAajB,EAAQqB,YAEjGrB,EAAQsB,MAAQ,IACfnB,EAAAA,EAAAA,MAAA,KAAGa,UAAU,wDAAuDC,SAAA,CAAC,UAAGjB,EAAQsB,UAElFJ,EAAAA,EAAAA,KAAA,UACEK,QAASA,IAAMtB,EAAaD,EAAQwB,MACpCR,UAAU,oLAAmLC,SAC9L,2EAGK,IAGVpB,EAAY4B,YAAc,cAE1B,MAAMC,EAAWA,KACf,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAChC3B,EAAW4B,IAAgBD,EAAAA,EAAAA,UAAS,UACpCE,EAAUC,IAAeH,EAAAA,EAAAA,UAAS,KAClCI,EAASC,IAAcL,EAAAA,EAAAA,WAAS,IAChCM,EAAOC,IAAYP,EAAAA,EAAAA,UAAS,OAC5BQ,EAAYC,IAAiBT,EAAAA,EAAAA,UAAS,IAE7CU,EAAAA,EAAAA,YAAU,KACR,IACIC,EADAC,GAAY,EAGhB,MAAMC,EAAgBC,UACpB,IAAKC,UAAUC,OAGb,OAFAT,EAAS,mXACTF,GAAW,GAIb,IACEA,GAAW,GACXE,EAAS,MAET,MAAMU,ODjCiBH,WAC7B,IACE,MAAMI,EAAajE,EAAMW,IAAI,gBAC7B,GAAIsD,EAEF,OADAC,QAAQC,IAAI,0LACLF,EAGTC,QAAQC,IAAI,iLAEZ,MAAMC,EAAU,CACd,OAAU,mCAIRC,CAAAA,SAAAA,aAAAA,WAAAA,gBAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,IAAYC,yBACdF,EAAQG,cAAgB,SAASF,CAAAA,SAAAA,aAAAA,WAAAA,gBAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,0BAG/C,MAAME,QAAiBC,EAAAA,EAAM9D,IAAI,kDAA8C,CAC7EyD,UACAM,QAAS,MAGX,GAAwB,MAApBF,EAASG,QAAkBC,MAAMC,QAAQL,EAASrE,MAAO,CAC3D,MAAM2E,EAAgBN,EAASrE,KAC5B4E,QAAOC,IAASA,EAAKC,OAASD,EAAKE,UACnCC,KAAIH,IAAI,CACP3C,KAAM2C,EAAK3C,KACXK,KAAMsC,EAAKI,SACX5C,MAAOwC,EAAKK,iBACZ9C,SAAUyC,EAAKzC,SACf+C,UAAW,IAAI7E,KAAKuE,EAAKO,gBAE1BC,MAAK,CAACC,EAAGC,IAAMA,EAAEJ,UAAYG,EAAEH,YAElC,GAAIR,EAAca,OAAS,EAGzB,OAFAzB,QAAQC,IAAI,yIAA4BW,EAAca,QACtD3F,EAAMK,IAAI,eAAgByE,GACnBA,CAEX,CAEA,MAAM,IAAIc,MAAM,gOAClB,CAAE,MAAOvC,GAGP,GAFAa,QAAQb,MAAM,2LAAsCA,GAEjC,iBAAfA,EAAMwC,KACR,MAAM,IAAID,MAAM,+WAGlB,GAAIvC,EAAMmB,SAAU,CAClB,MAAM,OAAEG,EAAM,KAAExE,GAASkD,EAAMmB,SAE/B,GAAe,MAAXG,EACF,MAAM,IAAIiB,MAAM,mWAGlB,GAAe,MAAXjB,EACF,MAAM,IAAIiB,MAAM,kRAGlB,MAAM,IAAIA,MAAM,oDAAsBzF,EAAK2F,SAAW,4GACxD,CAEA,MAAM,IAAIF,MAAM,2UAClB,GCjC0BG,GAEpB,IAAKpC,EAAW,OAEZK,GAASA,EAAM2B,OAAS,GAC1BzC,EAAYc,GACZZ,GAAW,GACXI,EAAc,IAEVD,EAAa,GACfW,QAAQC,IAAI,yJACZX,GAAcwC,GAAQA,EAAO,IAC7BtC,EAAeuC,WAAWrC,EAAe,OAEzCN,EAAS,kVACTF,GAAW,GAGjB,CAAE,MAAO8C,GAEP,GADAhC,QAAQb,MAAM,6JAAiC6C,IAC1CvC,EAAW,OAEhBL,EAAS4C,EAAIJ,SAAW,uRACxB1C,GAAW,EACb,GAWF,OARA+C,OAAOC,iBAAiB,SAAUxC,GAClCuC,OAAOC,iBAAiB,WAAW,KACjC9C,EAAS,uMACTF,GAAW,EAAM,IAGnBQ,IAEO,KACLD,GAAY,EACZwC,OAAOE,oBAAoB,SAAUzC,GACrCuC,OAAOE,oBAAoB,WAAW,SAClC3C,GACF4C,aAAa5C,EACf,CACD,GACA,CAACH,IAEJ,MAcMgD,EAAcA,KACbzC,UAAUC,QAIfP,EAAc,GACdJ,GAAW,IAJTE,EAAS,6RAIK,EAGlB,OAAIH,GAEAf,EAAAA,EAAAA,KAAA,WAASoE,GAAG,WAAWtE,UAAU,gGAA+FC,UAC9Hd,EAAAA,EAAAA,MAAA,OAAKa,UAAU,uCAAsCC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wCAAuCC,SAAC,mEACtDd,EAAAA,EAAAA,MAAA,OAAKa,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8CACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+CACfb,EAAAA,EAAAA,MAAA,OAAKa,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oDACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uDAEjBE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iCAAgCC,SAC1CoB,EAAa,EAAI,qGAAqBA,SAAoB,iHAQnEF,GAEAjB,EAAAA,EAAAA,KAAA,WAASoE,GAAG,WAAWtE,UAAU,gGAA+FC,UAC9Hd,EAAAA,EAAAA,MAAA,OAAKa,UAAU,uCAAsCC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wCAAuCC,SAAC,mEACtDd,EAAAA,EAAAA,MAAA,OAAKa,UAAU,yEAAwEC,SAAA,EACrFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAAEkB,KACpCjB,EAAAA,EAAAA,KAAA,UACEK,QAAS8D,EACTrE,UAAU,kIAAiIC,SAC5I,+GAUTC,EAAAA,EAAAA,KAAA,WAASoE,GAAG,WAAWtE,UAAU,uGAAsGC,UACrId,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CC,SAAA,EACxDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uEAAsEC,SAAC,mEAIrFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6BAA4BC,SACxCc,EAAS0C,OAAS,GACjBtE,EAAAA,EAAAA,MAAAoF,EAAAA,SAAA,CAAAtE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+FAA8FC,UAC3GC,EAAAA,EAAAA,KAACsE,EAAAA,GAAe,CAACC,KAAK,OAAOnF,SAAS,EAAMW,UAC1CC,EAAAA,EAAAA,KAACrB,EAAW,CAEVG,QAAS+B,EAASJ,GAClB1B,aA9EQuB,IACxByD,OAAOS,KAAKlE,EAAM,SAAU,sBAAsB,EA8ElCtB,UAAWA,GAHNyB,QAQXxB,EAAAA,EAAAA,MAAA,OAAKa,UAAU,sEAAqEC,SAAA,EAClFd,EAAAA,EAAAA,MAACC,EAAAA,EAAEuF,OAAM,CACPpE,QAlFGqE,KACjB9D,EAAa,QACbF,GAAWkD,IAASA,EAAO,EAAI/C,EAAS0C,QAAU1C,EAAS0C,QAAO,EAiFpDzD,UAAU,uMACV6E,WAAY,CAAEpF,MAAO,MACrBqF,SAAU,CAAErF,MAAO,KAAOQ,SAAA,EAE1BC,EAAAA,EAAAA,KAACd,EAAAA,EAAEC,IAAG,CACJW,UAAU,0GAEZE,EAAAA,EAAAA,KAACd,EAAAA,EAAE2F,KAAI,CACL/E,UAAU,WACV6E,WAAY,CAAEG,GAAI,GAClBpF,WAAY,CACVC,KAAM,SACNC,UAAW,IACXC,QAAS,IACTE,SACH,eAKHC,EAAAA,EAAAA,KAACd,EAAAA,EAAEC,IAAG,CAEJC,QAAS,CAAEC,QAAS,EAAGC,EAAG,GAC1BE,QAAS,CAAEH,QAAS,EAAGC,EAAG,GAC1BG,KAAM,CAAEJ,QAAS,EAAGC,GAAI,GACxBI,WAAY,CAAEqF,SAAU,IACxBjF,UAAU,yEAAwEC,UAElFd,EAAAA,EAAAA,MAAA,QAAMa,UAAU,mCAAkCC,SAAA,CAC/CU,EAAU,EAAE,MAAII,EAAS0C,WARvB9C,IAYPxB,EAAAA,EAAAA,MAACC,EAAAA,EAAEuF,OAAM,CACPpE,QAhHG2E,KACjBpE,EAAa,SACbF,GAAWkD,IAASA,EAAO,GAAK/C,EAAS0C,QAAO,EA+GlCzD,UAAU,uMACV6E,WAAY,CAAEpF,MAAO,MACrBqF,SAAU,CAAErF,MAAO,KAAOQ,SAAA,EAE1BC,EAAAA,EAAAA,KAACd,EAAAA,EAAEC,IAAG,CACJW,UAAU,0GAEZE,EAAAA,EAAAA,KAACd,EAAAA,EAAE2F,KAAI,CACL/E,UAAU,WACV6E,WAAY,CAAEG,EAAG,GACjBpF,WAAY,CACVC,KAAM,SACNC,UAAW,IACXC,QAAS,IACTE,SACH,qBAOPd,EAAAA,EAAAA,MAAA,OAAKa,UAAU,+CAA8CC,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA4BC,SAAC,wGAC1CC,EAAAA,EAAAA,KAAA,UACEK,QAAS8D,EACTrE,UAAU,kIAAiIC,SAC5I,8DAOD,EAId,GAAenB,EAAAA,EAAAA,MAAK4B,E","sources":["services/githubService.js","Projects.js"],"sourcesContent":["import axios from 'axios';\n\nconst GITHUB_API_URL = 'https://api.github.com';\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 минут\n\nclass Cache {\n  constructor() {\n    this.data = new Map();\n  }\n\n  set(key, value) {\n    this.data.set(key, {\n      value,\n      timestamp: Date.now()\n    });\n  }\n\n  get(key) {\n    const item = this.data.get(key);\n    if (!item) return null;\n    \n    const isExpired = Date.now() - item.timestamp > CACHE_DURATION;\n    if (isExpired) {\n      this.data.delete(key);\n      return null;\n    }\n    \n    return item.value;\n  }\n\n  clear() {\n    this.data.clear();\n  }\n}\n\nconst cache = new Cache();\n\nexport const getRepositories = async () => {\n  try {\n    const cachedData = cache.get('repositories');\n    if (cachedData) {\n      console.log('Используются кэшированные данные');\n      return cachedData;\n    }\n\n    console.log('Начинаем загрузку репозиториев...');\n    \n    const headers = {\n      'Accept': 'application/vnd.github.v3+json'\n    };\n\n    // Добавляем токен только если он существует\n    if (process.env.REACT_APP_GITHUB_TOKEN) {\n      headers.Authorization = `token ${process.env.REACT_APP_GITHUB_TOKEN}`;\n    }\n\n    const response = await axios.get(`${GITHUB_API_URL}/users/hamletsspeak/repos`, {\n      headers,\n      timeout: 10000 // 10 секунд таймаут\n    });\n\n    if (response.status === 200 && Array.isArray(response.data)) {\n      const processedData = response.data\n        .filter(repo => !repo.fork && !repo.private)\n        .map(repo => ({\n          name: repo.name,\n          link: repo.html_url,\n          stars: repo.stargazers_count,\n          language: repo.language,\n          updatedAt: new Date(repo.updated_at)\n        }))\n        .sort((a, b) => b.updatedAt - a.updatedAt);\n\n      if (processedData.length > 0) {\n        console.log('Обработано репозиториев:', processedData.length);\n        cache.set('repositories', processedData);\n        return processedData;\n      }\n    }\n    \n    throw new Error('Не удалось получить данные о репозиториях');\n  } catch (error) {\n    console.error('Ошибка при получении репозиториев:', error);\n    \n    if (error.code === 'ECONNABORTED') {\n      throw new Error('Превышено время ожидания запроса. Проверьте подключение к интернету.');\n    }\n    \n    if (error.response) {\n      const { status, data } = error.response;\n      \n      if (status === 403) {\n        throw new Error('Превышен лимит запросов к GitHub API. Пожалуйста, подождите несколько минут.');\n      }\n      \n      if (status === 404) {\n        throw new Error('Пользователь не найден или репозитории недоступны.');\n      }\n      \n      throw new Error(`Ошибка GitHub API: ${data.message || 'Неизвестная ошибка'}`);\n    }\n    \n    throw new Error('Не удалось подключиться к GitHub. Проверьте подключение к интернету.');\n  }\n};","import React, { useState, useEffect, memo } from 'react';\nimport { m, AnimatePresence } from './config/animations';\nimport { getRepositories } from './services/githubService';\n\nconst ProjectCard = memo(({ project, onViewGithub, direction }) => (\n  <m.div\n    initial={{ \n      opacity: 0,\n      y: direction === 'right' ? 20 : -20,\n      scale: 0.95\n    }}\n    animate={{ \n      opacity: 1,\n      y: 0,\n      scale: 1\n    }}\n    exit={{ \n      opacity: 0,\n      y: direction === 'right' ? -20 : 20,\n      scale: 0.95\n    }}\n    transition={{ \n      type: \"spring\",\n      stiffness: 300,\n      damping: 30\n    }}\n    className=\"bg-gradient-to-br from-[#2a2a2a] to-[#1a1a1a] text-white rounded-xl shadow-xl p-4 sm:p-6 w-full max-w-[90%] sm:max-w-md mx-auto border border-white/10 hover:border-blue-500/50 transition-all duration-300\"\n  >\n    <h3 className=\"text-xl sm:text-2xl font-bold mb-3 text-blue-400\">{project.name}</h3>\n    <p className=\"mt-2 sm:mt-4 text-sm sm:text-base text-gray-300 leading-relaxed\">{project.description}</p>\n    {project.language && (\n      <p className=\"mt-2 sm:mt-4 text-sm sm:text-base text-blue-400 font-medium\">Технология: {project.language}</p>\n    )}\n    {project.stars > 0 && (\n      <p className=\"mt-2 text-sm sm:text-base text-yellow-400 font-medium\">⭐ {project.stars}</p>\n    )}\n    <button\n      onClick={() => onViewGithub(project.link)}\n      className=\"mt-4 sm:mt-6 bg-blue-500 text-white px-4 sm:px-6 py-2 sm:py-3 text-sm sm:text-base rounded-lg hover:bg-blue-600 transition-all duration-300 transform hover:scale-105 font-medium\"\n    >\n      Смотреть на GitHub\n    </button>\n  </m.div>\n));\n\nProjectCard.displayName = 'ProjectCard';\n\nconst Projects = () => {\n  const [current, setCurrent] = useState(0);\n  const [direction, setDirection] = useState('right');\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n\n  useEffect(() => {\n    let isMounted = true;\n    let retryTimeout;\n\n    const fetchProjects = async () => {\n      if (!navigator.onLine) {\n        setError('Отсутствует подключение к интернету. Проверьте сетевое подключение.');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const repos = await getRepositories();\n        \n        if (!isMounted) return;\n\n        if (repos && repos.length > 0) {\n          setProjects(repos);\n          setLoading(false);\n          setRetryCount(0);\n        } else {\n          if (retryCount < 2) {\n            console.log('Повторная попытка загрузки...');\n            setRetryCount(prev => prev + 1);\n            retryTimeout = setTimeout(fetchProjects, 3000);\n          } else {\n            setError('Не удалось загрузить проекты. Возможно, они временно недоступны.');\n            setLoading(false);\n          }\n        }\n      } catch (err) {\n        console.error('Ошибка при загрузке проектов:', err);\n        if (!isMounted) return;\n        \n        setError(err.message || 'Произошла неизвестная ошибка при загрузке проектов');\n        setLoading(false);\n      }\n    };\n\n    window.addEventListener('online', fetchProjects);\n    window.addEventListener('offline', () => {\n      setError('Отсутствует подключение к интернету');\n      setLoading(false);\n    });\n\n    fetchProjects();\n\n    return () => {\n      isMounted = false;\n      window.removeEventListener('online', fetchProjects);\n      window.removeEventListener('offline', () => {});\n      if (retryTimeout) {\n        clearTimeout(retryTimeout);\n      }\n    };\n  }, [retryCount]);\n\n  const handleViewGithub = (link) => {\n    window.open(link, '_blank', 'noopener,noreferrer');\n  };\n\n  const handlePrev = () => {\n    setDirection('left');\n    setCurrent(prev => (prev - 1 + projects.length) % projects.length);\n  };\n\n  const handleNext = () => {\n    setDirection('right');\n    setCurrent(prev => (prev + 1) % projects.length);\n  };\n\n  const handleRetry = () => {\n    if (!navigator.onLine) {\n      setError('Проверьте подключение к интернету и попробуйте снова');\n      return;\n    }\n    setRetryCount(0);\n    setLoading(true);\n  };\n\n  if (loading) {\n    return (\n      <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center p-8\">\n        <div className=\"w-full max-w-4xl mx-auto text-center\">\n          <h2 className=\"text-5xl font-bold mb-12 shimmer-text\">Мои проекты</h2>\n          <div className=\"space-y-6 w-full max-w-md mx-auto\">\n            <div className=\"h-8 bg-gray-700 rounded-lg animate-pulse\"></div>\n            <div className=\"h-32 bg-gray-700 rounded-lg animate-pulse\"></div>\n            <div className=\"flex justify-center gap-6 mt-8\">\n              <div className=\"h-12 w-24 bg-gray-700 rounded-lg animate-pulse\"></div>\n              <div className=\"h-12 w-24 bg-gray-700 rounded-lg animate-pulse\"></div>\n            </div>\n            <p className=\"text-center text-gray-400 mt-6\">\n              {retryCount > 0 ? `Повторная попытка ${retryCount}/2...` : 'Загрузка проектов...'}\n            </p>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  if (error) {\n    return (\n      <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center p-8\">\n        <div className=\"w-full max-w-4xl mx-auto text-center\">\n          <h2 className=\"text-5xl font-bold mb-12 shimmer-text\">Мои проекты</h2>\n          <div className=\"bg-red-500/10 border border-red-500/50 rounded-lg p-6 max-w-md mx-auto\">\n            <div className=\"text-red-400 mb-6\">{error}</div>\n            <button\n              onClick={handleRetry}\n              className=\"bg-blue-500 text-white px-8 py-3 rounded-lg hover:bg-blue-600 transition-all duration-300 transform hover:scale-105 font-medium\"\n            >\n              Попробовать снова\n            </button>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center p-2 sm:p-4\">\n      <div className=\"w-full max-w-4xl mx-auto text-center px-2\">\n        <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-bold mb-6 sm:mb-8 shimmer-text\">\n          Мои проекты\n        </h2>\n        \n        <div className=\"flex flex-col items-center\">\n          {projects.length > 0 ? (\n            <>\n              <div className=\"relative w-full min-h-[300px] sm:min-h-[350px] flex items-center justify-center mb-4 sm:mb-6\">\n                <AnimatePresence mode=\"wait\" initial={false}>\n                  <ProjectCard\n                    key={current}\n                    project={projects[current]}\n                    onViewGithub={handleViewGithub}\n                    direction={direction}\n                  />\n                </AnimatePresence>\n              </div>\n              \n              <div className=\"flex items-center justify-center gap-4 sm:gap-6 w-full mt-2 sm:mt-4\">\n                <m.button\n                  onClick={handlePrev}\n                  className=\"bg-blue-500/80 backdrop-blur-sm text-white w-10 h-10 sm:w-12 sm:h-12 rounded-full hover:bg-blue-600 transition-all duration-300 flex items-center justify-center text-base sm:text-lg relative group\"\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  <m.div\n                    className=\"absolute inset-0 rounded-full bg-blue-400/20 group-hover:scale-110 transition-transform duration-300\"\n                  />\n                  <m.span\n                    className=\"relative\"\n                    whileHover={{ x: -4 }}\n                    transition={{\n                      type: \"spring\",\n                      stiffness: 400,\n                      damping: 25\n                    }}\n                  >\n                    ←\n                  </m.span>\n                </m.button>\n                \n                <m.div \n                  key={current}\n                  initial={{ opacity: 0, y: 5 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -5 }}\n                  transition={{ duration: 0.2 }}\n                  className=\"bg-blue-500/20 backdrop-blur-sm px-4 py-1.5 rounded-full text-white/90\"\n                >\n                  <span className=\"text-base sm:text-lg font-medium\">\n                    {current + 1} / {projects.length}\n                  </span>\n                </m.div>\n\n                <m.button\n                  onClick={handleNext}\n                  className=\"bg-blue-500/80 backdrop-blur-sm text-white w-10 h-10 sm:w-12 sm:h-12 rounded-full hover:bg-blue-600 transition-all duration-300 flex items-center justify-center text-base sm:text-lg relative group\"\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  <m.div\n                    className=\"absolute inset-0 rounded-full bg-blue-400/20 group-hover:scale-110 transition-transform duration-300\"\n                  />\n                  <m.span\n                    className=\"relative\"\n                    whileHover={{ x: 4 }}\n                    transition={{\n                      type: \"spring\",\n                      stiffness: 400,\n                      damping: 25\n                    }}\n                  >\n                    →\n                  </m.span>\n                </m.button>\n              </div>\n            </>\n          ) : (\n            <div className=\"bg-[#2a2a2a] rounded-lg p-8 max-w-md mx-auto\">\n              <p className=\"text-gray-400 mb-6 text-lg\">Проекты не найдены</p>\n              <button\n                onClick={handleRetry}\n                className=\"bg-blue-500 text-white px-8 py-3 rounded-lg hover:bg-blue-600 transition-all duration-300 transform hover:scale-105 font-medium\"\n              >\n                Обновить\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(Projects);\n"],"names":["cache","constructor","this","data","Map","set","key","value","timestamp","Date","now","get","item","delete","clear","ProjectCard","memo","_ref","project","onViewGithub","direction","_jsxs","m","div","initial","opacity","y","scale","animate","exit","transition","type","stiffness","damping","className","children","_jsx","name","description","language","stars","onClick","link","displayName","Projects","current","setCurrent","useState","setDirection","projects","setProjects","loading","setLoading","error","setError","retryCount","setRetryCount","useEffect","retryTimeout","isMounted","fetchProjects","async","navigator","onLine","repos","cachedData","console","log","headers","process","REACT_APP_GITHUB_TOKEN","Authorization","response","axios","timeout","status","Array","isArray","processedData","filter","repo","fork","private","map","html_url","stargazers_count","updatedAt","updated_at","sort","a","b","length","Error","code","message","getRepositories","prev","setTimeout","err","window","addEventListener","removeEventListener","clearTimeout","handleRetry","id","_Fragment","AnimatePresence","mode","open","button","handlePrev","whileHover","whileTap","span","x","duration","handleNext"],"sourceRoot":""}