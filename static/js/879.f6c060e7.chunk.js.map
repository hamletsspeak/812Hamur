{"version":3,"file":"static/js/879.f6c060e7.chunk.js","mappings":"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","sources":["services/githubService.js","Projects.js"],"sourcesContent":["import axios from 'axios';\n\nconst GITHUB_API_URL = 'https://api.github.com';\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 минут\n\nclass Cache {\n  constructor() {\n    this.data = new Map();\n  }\n\n  set(key, value) {\n    this.data.set(key, {\n      value,\n      timestamp: Date.now()\n    });\n  }\n\n  get(key) {\n    const item = this.data.get(key);\n    if (!item) return null;\n    \n    const isExpired = Date.now() - item.timestamp > CACHE_DURATION;\n    if (isExpired) {\n      this.data.delete(key);\n      return null;\n    }\n    \n    return item.value;\n  }\n\n  clear() {\n    this.data.clear();\n  }\n}\n\nconst cache = new Cache();\n\nexport const getRepositories = async () => {\n  try {\n    const cachedData = cache.get('repositories');\n    if (cachedData) {\n      console.log('Используются кэшированные данные');\n      return cachedData;\n    }\n\n    console.log('Начинаем загрузку репозиториев...');\n    \n    const headers = {\n      'Accept': 'application/vnd.github.v3+json'\n    };\n\n    // Добавляем токен только если он существует\n    if (process.env.REACT_APP_GITHUB_TOKEN) {\n      headers.Authorization = `token ${process.env.REACT_APP_GITHUB_TOKEN}`;\n    }\n\n    const response = await axios.get(`${GITHUB_API_URL}/users/hamletsspeak/repos`, {\n      headers,\n      timeout: 10000 // 10 секунд таймаут\n    });\n\n    if (response.status === 200 && Array.isArray(response.data)) {\n      const processedData = response.data\n        .filter(repo => !repo.fork && !repo.private)\n        .map(repo => ({\n          name: repo.name,\n          link: repo.html_url,\n          stars: repo.stargazers_count,\n          language: repo.language,\n          updatedAt: new Date(repo.updated_at)\n        }))\n        .sort((a, b) => b.updatedAt - a.updatedAt);\n\n      if (processedData.length > 0) {\n        console.log('Обработано репозиториев:', processedData.length);\n        cache.set('repositories', processedData);\n        return processedData;\n      }\n    }\n    \n    throw new Error('Не удалось получить данные о репозиториях');\n  } catch (error) {\n    console.error('Ошибка при получении репозиториев:', error);\n    \n    if (error.code === 'ECONNABORTED') {\n      throw new Error('Превышено время ожидания запроса. Проверьте подключение к интернету.');\n    }\n    \n    if (error.response) {\n      const { status, data } = error.response;\n      \n      if (status === 403) {\n        throw new Error('Превышен лимит запросов к GitHub API. Пожалуйста, подождите несколько минут.');\n      }\n      \n      if (status === 404) {\n        throw new Error('Пользователь не найден или репозитории недоступны.');\n      }\n      \n      throw new Error(`Ошибка GitHub API: ${data.message || 'Неизвестная ошибка'}`);\n    }\n    \n    throw new Error('Не удалось подключиться к GitHub. Проверьте подключение к интернету.');\n  }\n};","import React, { useState, useEffect, memo } from 'react';\nimport { m } from './config/animations';\nimport { getRepositories } from './services/githubService';\n\nconst ProjectCard = memo(({ project, onViewGithub }) => (\n  <m.div\n    initial={{ opacity: 0, y: 20 }}\n    animate={{ opacity: 1, y: 0 }}\n    exit={{ opacity: 0, y: -20 }}\n    transition={{ duration: 0.3 }}\n    className=\"bg-[#222] text-white rounded-lg shadow-lg p-6 w-full max-w-md border border-white/10\"\n  >\n    <h3 className=\"text-2xl font-bold mb-2\">{project.name}</h3>\n    <p className=\"mt-2 text-gray-300\">{project.description}</p>\n    {project.language && (\n      <p className=\"mt-2 text-blue-400\">Технология: {project.language}</p>\n    )}\n    {project.stars > 0 && (\n      <p className=\"mt-2 text-yellow-400\">⭐ {project.stars}</p>\n    )}\n    <button\n      onClick={() => onViewGithub(project.link)}\n      className=\"mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition-colors\"\n    >\n      Смотреть на GitHub\n    </button>\n  </m.div>\n));\n\nProjectCard.displayName = 'ProjectCard';\n\nconst Projects = () => {\n  const [current, setCurrent] = useState(0);\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n\n  useEffect(() => {\n    let isMounted = true;\n    let retryTimeout;\n\n    const fetchProjects = async () => {\n      if (!navigator.onLine) {\n        setError('Отсутствует подключение к интернету. Проверьте сетевое подключение.');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const repos = await getRepositories();\n        \n        if (!isMounted) return;\n\n        if (repos && repos.length > 0) {\n          setProjects(repos);\n          setLoading(false);\n          setRetryCount(0);\n        } else {\n          if (retryCount < 2) {\n            console.log('Повторная попытка загрузки...');\n            setRetryCount(prev => prev + 1);\n            retryTimeout = setTimeout(fetchProjects, 3000);\n          } else {\n            setError('Не удалось загрузить проекты. Возможно, они временно недоступны.');\n            setLoading(false);\n          }\n        }\n      } catch (err) {\n        console.error('Ошибка при загрузке проектов:', err);\n        if (!isMounted) return;\n        \n        setError(err.message || 'Произошла неизвестная ошибка при загрузке проектов');\n        setLoading(false);\n      }\n    };\n\n    window.addEventListener('online', fetchProjects);\n    window.addEventListener('offline', () => {\n      setError('Отсутствует подключение к интернету');\n      setLoading(false);\n    });\n\n    fetchProjects();\n\n    return () => {\n      isMounted = false;\n      window.removeEventListener('online', fetchProjects);\n      window.removeEventListener('offline', () => {});\n      if (retryTimeout) {\n        clearTimeout(retryTimeout);\n      }\n    };\n  }, [retryCount]);\n\n  const handleViewGithub = (link) => {\n    window.open(link, '_blank', 'noopener,noreferrer');\n  };\n\n  const handlePrev = () => {\n    setCurrent(prev => (prev - 1 + projects.length) % projects.length);\n  };\n\n  const handleNext = () => {\n    setCurrent(prev => (prev + 1) % projects.length);\n  };\n\n  const handleRetry = () => {\n    if (!navigator.onLine) {\n      setError('Проверьте подключение к интернету и попробуйте снова');\n      return;\n    }\n    setRetryCount(0);\n    setLoading(true);\n  };\n\n  if (loading) {\n    return (\n      <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center px-6\">\n        <h2 className=\"text-4xl font-bold mb-8 text-center shimmer-text\">Мои проекты</h2>\n        <div className=\"space-y-4 w-full max-w-md\">\n          <div className=\"h-8 bg-gray-700 rounded-lg animate-pulse\"></div>\n          <div className=\"h-32 bg-gray-700 rounded-lg animate-pulse\"></div>\n          <div className=\"flex justify-center gap-4 mt-4\">\n            <div className=\"h-10 w-20 bg-gray-700 rounded animate-pulse\"></div>\n            <div className=\"h-10 w-20 bg-gray-700 rounded animate-pulse\"></div>\n          </div>\n          <p className=\"text-center text-gray-400\">\n            {retryCount > 0 ? `Повторная попытка ${retryCount}/2...` : 'Загрузка проектов...'}\n          </p>\n        </div>\n      </section>\n    );\n  }\n\n  if (error) {\n    return (\n      <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center px-6\">\n        <h2 className=\"text-4xl font-bold mb-8 shimmer-text\">Мои проекты</h2>\n        <div className=\"text-center\">\n          <div className=\"text-red-400 mb-4 max-w-md\">{error}</div>\n          <button\n            onClick={handleRetry}\n            className=\"bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600 transition-colors\"\n          >\n            Попробовать снова\n          </button>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center px-6\">\n      <div className=\"w-full max-w-4xl\">\n        <h2 className=\"text-4xl font-bold mb-8 text-center shimmer-text\">\n          Мои проекты\n        </h2>\n        \n        <div className=\"flex flex-col items-center\">\n          {projects.length > 0 ? (\n            <>\n              <ProjectCard\n                project={projects[current]}\n                onViewGithub={handleViewGithub}\n              />\n              \n              <div className=\"flex items-center gap-6 mt-8\">\n                <button\n                  onClick={handlePrev}\n                  className=\"bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600 transition-colors\"\n                >\n                  ←\n                </button>\n                <span className=\"text-lg\">\n                  {current + 1} / {projects.length}\n                </span>\n                <button\n                  onClick={handleNext}\n                  className=\"bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600 transition-colors\"\n                >\n                  →\n                </button>\n              </div>\n            </>\n          ) : (\n            <div className=\"text-center\">\n              <p className=\"text-gray-400 mb-4\">Проекты не найдены</p>\n              <button\n                onClick={handleRetry}\n                className=\"bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600 transition-colors\"\n              >\n                Обновить\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(Projects);\n"],"names":["cache","constructor","this","data","Map","set","key","value","timestamp","Date","now","get","item","delete","clear","ProjectCard","memo","_ref","project","onViewGithub","_jsxs","m","div","initial","opacity","y","animate","exit","transition","duration","className","children","_jsx","name","description","language","stars","onClick","link","displayName","Projects","current","setCurrent","useState","projects","setProjects","loading","setLoading","error","setError","retryCount","setRetryCount","useEffect","retryTimeout","isMounted","fetchProjects","async","navigator","onLine","repos","cachedData","console","log","headers","process","REACT_APP_GITHUB_TOKEN","Authorization","response","axios","timeout","status","Array","isArray","processedData","filter","repo","fork","private","map","html_url","stargazers_count","updatedAt","updated_at","sort","a","b","length","Error","code","message","getRepositories","prev","setTimeout","err","window","addEventListener","removeEventListener","clearTimeout","handleRetry","id","_Fragment","open","handlePrev","handleNext"],"sourceRoot":""}