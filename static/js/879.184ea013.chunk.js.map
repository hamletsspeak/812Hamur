{"version":3,"file":"static/js/879.184ea013.chunk.js","mappings":"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","sources":["services/githubService.js","Projects.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst GITHUB_API_URL = 'https://api.github.com';\r\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 минут\r\n\r\nclass Cache {\r\n  constructor() {\r\n    this.data = new Map();\r\n  }\r\n\r\n  set(key, value) {\r\n    this.data.set(key, {\r\n      value,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  get(key) {\r\n    const item = this.data.get(key);\r\n    if (!item) return null;\r\n    \r\n    const isExpired = Date.now() - item.timestamp > CACHE_DURATION;\r\n    if (isExpired) {\r\n      this.data.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.value;\r\n  }\r\n\r\n  clear() {\r\n    this.data.clear();\r\n  }\r\n}\r\n\r\nconst cache = new Cache();\r\n\r\nexport const getRepositories = async () => {\r\n  try {\r\n    const cachedData = cache.get('repositories');\r\n    if (cachedData) {\r\n      console.log('Используются кэшированные данные');\r\n      return cachedData;\r\n    }\r\n\r\n    console.log('Начинаем загрузку репозиториев...');\r\n    \r\n    const headers = {\r\n      'Accept': 'application/vnd.github.v3+json'\r\n    };\r\n\r\n    // Добавляем токен только если он существует\r\n    if (process.env.REACT_APP_GITHUB_TOKEN) {\r\n      headers.Authorization = `token ${process.env.REACT_APP_GITHUB_TOKEN}`;\r\n    }\r\n\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/hamletsspeak/repos`, {\r\n      headers,\r\n      timeout: 10000 // 10 секунд таймаут\r\n    });\r\n\r\n    if (response.status === 200 && Array.isArray(response.data)) {\r\n      const processedData = response.data\r\n        .filter(repo => !repo.fork && !repo.private)\r\n        .map(repo => ({\r\n          name: repo.name,\r\n          link: repo.html_url,\r\n          stars: repo.stargazers_count,\r\n          language: repo.language,\r\n          updatedAt: new Date(repo.updated_at)\r\n        }))\r\n        .sort((a, b) => b.updatedAt - a.updatedAt);\r\n\r\n      if (processedData.length > 0) {\r\n        console.log('Обработано репозиториев:', processedData.length);\r\n        cache.set('repositories', processedData);\r\n        return processedData;\r\n      }\r\n    }\r\n    \r\n    throw new Error('Не удалось получить данные о репозиториях');\r\n  } catch (error) {\r\n    console.error('Ошибка при получении репозиториев:', error);\r\n    \r\n    if (error.code === 'ECONNABORTED') {\r\n      throw new Error('Превышено время ожидания запроса. Проверьте подключение к интернету.');\r\n    }\r\n    \r\n    if (error.response) {\r\n      const { status, data } = error.response;\r\n      \r\n      if (status === 403) {\r\n        throw new Error('Превышен лимит запросов к GitHub API. Пожалуйста, подождите несколько минут.');\r\n      }\r\n      \r\n      if (status === 404) {\r\n        throw new Error('Пользователь не найден или репозитории недоступны.');\r\n      }\r\n      \r\n      throw new Error(`Ошибка GitHub API: ${data.message || 'Неизвестная ошибка'}`);\r\n    }\r\n    \r\n    throw new Error('Не удалось подключиться к GitHub. Проверьте подключение к интернету.');\r\n  }\r\n};","import React, { useState, useEffect, memo } from 'react';\r\nimport { m, AnimatePresence } from './config/animations';\r\nimport { fadeInFromRightVariant, zoomRotateVariant, useScrollAnimation } from './config/animations';\r\nimport { getRepositories } from './services/githubService';\r\nimport { useLanguage } from \"./contexts/LanguageContext\";\r\n\r\nconst ProjectCard = memo(({ project, onViewGithub, direction }) => {\r\n  const scrollAnimation = useScrollAnimation(0.3);\r\n  \r\n  return (\r\n    <m.div\r\n      variants={fadeInFromRightVariant}\r\n      {...scrollAnimation}\r\n      className=\"bg-[#222] text-white rounded-lg shadow-lg p-6 w-full max-w-md border border-white/10\"\r\n    >\r\n      <h3 className=\"text-xl sm:text-2xl font-bold mb-3 text-blue-400\">{project.name}</h3>\r\n      <p className=\"mt-2 sm:mt-4 text-sm sm:text-base text-gray-300 leading-relaxed\">{project.description}</p>\r\n      {project.language && (\r\n        <p className=\"mt-2 sm:mt-4 text-sm sm:text-base text-blue-400 font-medium\">Технология: {project.language}</p>\r\n      )}\r\n      {project.stars > 0 && (\r\n        <p className=\"mt-2 text-sm sm:text-base text-yellow-400 font-medium\">⭐ {project.stars}</p>\r\n      )}\r\n      <m.button\r\n        onClick={() => onViewGithub(project.link)}\r\n        className=\"relative mt-4 sm:mt-6 bg-blue-500 text-white px-4 sm:px-6 py-2 sm:py-3 text-sm sm:text-base rounded-lg hover:bg-blue-600 transition-all duration-300 transform hover:scale-105 font-medium overflow-hidden group\"\r\n        whileHover={{ scale: 1.05 }}\r\n        whileTap={{ scale: 0.95 }}\r\n      >\r\n        <m.span\r\n          className=\"absolute inset-0 bg-white/30 translate-y-full\"\r\n          initial={{ translateY: \"100%\" }}\r\n          whileTap={{ \r\n            translateY: \"0%\",\r\n            transition: { duration: 0.2 }\r\n          }}\r\n        />\r\n        <span className=\"relative z-10\">Смотреть на GitHub</span>\r\n      </m.button>\r\n    </m.div>\r\n  );\r\n});\r\n\r\nProjectCard.displayName = 'ProjectCard';\r\n\r\nconst NavigationButton = ({ onClick, direction, children }) => (\r\n  <m.button\r\n    onClick={onClick}\r\n    className=\"bg-blue-500/80 backdrop-blur-sm text-white w-10 h-10 sm:w-12 sm:h-12 rounded-full hover:bg-blue-600 transition-all duration-300 flex items-center justify-center text-base sm:text-lg relative group\"\r\n    whileHover={{ scale: 1.1 }}\r\n    whileTap={{ scale: 0.9 }}\r\n    initial={{ opacity: 0, x: direction === 'left' ? -20 : 20 }}\r\n    animate={{ opacity: 1, x: 0 }}\r\n    transition={{\r\n      type: \"spring\",\r\n      stiffness: 400,\r\n      damping: 25\r\n    }}\r\n  >\r\n    <m.div\r\n      className=\"absolute inset-0 rounded-full bg-blue-400/20\"\r\n      whileHover={{ scale: 1.2 }}\r\n      transition={{\r\n        type: \"spring\",\r\n        stiffness: 300,\r\n        damping: 20\r\n      }}\r\n    />\r\n    <m.span\r\n      className=\"relative z-10\"\r\n      whileHover={{ x: direction === 'left' ? -4 : 4 }}\r\n      transition={{\r\n        type: \"spring\",\r\n        stiffness: 400,\r\n        damping: 25\r\n      }}\r\n    >\r\n      {children}\r\n    </m.span>\r\n  </m.button>\r\n);\r\n\r\nconst Projects = () => {\r\n  const { t } = useLanguage();\r\n  const titleScrollAnimation = useScrollAnimation();\r\n  const [current, setCurrent] = useState(0);\r\n  const [direction, setDirection] = useState('right');\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [retryCount, setRetryCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    let retryTimeout;\r\n\r\n    const fetchProjects = async () => {\r\n      if (!navigator.onLine) {\r\n        setError('Отсутствует подключение к интернету. Проверьте сетевое подключение.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        const repos = await getRepositories();\r\n        \r\n        if (!isMounted) return;\r\n\r\n        if (repos && repos.length > 0) {\r\n          setProjects(repos);\r\n          setLoading(false);\r\n          setRetryCount(0);\r\n        } else {\r\n          if (retryCount < 2) {\r\n            console.log('Повторная попытка загрузки...');\r\n            setRetryCount(prev => prev + 1);\r\n            retryTimeout = setTimeout(fetchProjects, 3000);\r\n          } else {\r\n            setError('Не удалось загрузить проекты. Возможно, они временно недоступны.');\r\n            setLoading(false);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Ошибка при загрузке проектов:', err);\r\n        if (!isMounted) return;\r\n        \r\n        setError(err.message || 'Произошла неизвестная ошибка при загрузке проектов');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('online', fetchProjects);\r\n    window.addEventListener('offline', () => {\r\n      setError('Отсутствует подключение к интернету');\r\n      setLoading(false);\r\n    });\r\n\r\n    fetchProjects();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      window.removeEventListener('online', fetchProjects);\r\n      window.removeEventListener('offline', () => {});\r\n      if (retryTimeout) {\r\n        clearTimeout(retryTimeout);\r\n      }\r\n    };\r\n  }, [retryCount]);\r\n\r\n  const handleViewGithub = (link) => {\r\n    window.open(link, '_blank', 'noopener,noreferrer');\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setDirection('left');\r\n    setCurrent(prev => (prev - 1 + projects.length) % projects.length);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setDirection('right');\r\n    setCurrent(prev => (prev + 1) % projects.length);\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    if (!navigator.onLine) {\r\n      setError('Проверьте подключение к интернету и попробуйте снова');\r\n      return;\r\n    }\r\n    setRetryCount(0);\r\n    setLoading(true);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center p-8\">\r\n        <div className=\"w-full max-w-4xl mx-auto text-center\">\r\n          <h2 className=\"text-5xl font-bold mb-12 shimmer-text\">{t(\"projectsTitle\")}</h2>\r\n          <div className=\"space-y-6 w-full max-w-md mx-auto\">\r\n            <div className=\"h-8 bg-gray-700 rounded-lg animate-pulse\"></div>\r\n            <div className=\"h-32 bg-gray-700 rounded-lg animate-pulse\"></div>\r\n            <div className=\"flex justify-center gap-6 mt-8\">\r\n              <div className=\"h-12 w-24 bg-gray-700 rounded-lg animate-pulse\"></div>\r\n              <div className=\"h-12 w-24 bg-gray-700 rounded-lg animate-pulse\"></div>\r\n            </div>\r\n            <p className=\"text-center text-gray-400 mt-6\">\r\n              {retryCount > 0 ? t(\"retryAttempt\", {count: retryCount}) : t(\"loadingProjects\")}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center p-8\">\r\n        <div className=\"w-full max-w-4xl mx-auto text-center\">\r\n          <h2 className=\"text-5xl font-bold mb-12 shimmer-text\">{t(\"projectsTitle\")}</h2>\r\n          <div className=\"bg-red-500/10 border border-red-500/50 rounded-lg p-6 max-w-md mx-auto\">\r\n            <div className=\"text-red-400 mb-6\">{error}</div>\r\n            <button\r\n              onClick={handleRetry}\r\n              className=\"bg-blue-500 text-white px-8 py-3 rounded-lg hover:bg-blue-600 transition-all duration-300 transform hover:scale-105 font-medium\"\r\n            >\r\n              {t(\"tryAgain\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center p-2 sm:p-4\">\r\n      <div className=\"w-full max-w-4xl mx-auto text-center px-2\">\r\n        <m.h2 \r\n          className=\"text-5xl sm:text-7xl font-bold mb-6 sm:mb-8 shimmer-text\"\r\n          variants={zoomRotateVariant}\r\n          {...titleScrollAnimation}\r\n        >\r\n          {t(\"projectsTitle\")}\r\n        </m.h2>\r\n        \r\n        <div className=\"flex flex-col items-center\">\r\n          {projects.length > 0 ? (\r\n            <>\r\n              <div className=\"relative w-full min-h-[300px] sm:min-h-[350px] flex items-center justify-center mb-4 sm:mb-6\">\r\n                <AnimatePresence mode=\"wait\" initial={false}>\r\n                  <ProjectCard\r\n                    key={current}\r\n                    project={projects[current]}\r\n                    onViewGithub={handleViewGithub}\r\n                    direction={direction}\r\n                  />\r\n                </AnimatePresence>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center justify-center gap-4 sm:gap-6 w-full mt-2 sm:mt-4\">\r\n                <NavigationButton onClick={handlePrev} direction=\"left\">←</NavigationButton>\r\n                \r\n                <m.div \r\n                  key={current}\r\n                  initial={{ opacity: 0, y: 5 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  exit={{ opacity: 0, y: -5 }}\r\n                  transition={{\r\n                    type: \"spring\",\r\n                    stiffness: 300,\r\n                    damping: 25\r\n                  }}\r\n                  className=\"bg-blue-500/20 backdrop-blur-sm px-4 py-1.5 rounded-full text-white/90\"\r\n                >\r\n                  <m.span \r\n                    className=\"text-base sm:text-lg font-medium\"\r\n                    whileHover={{ scale: 1.1 }}\r\n                    transition={{\r\n                      type: \"spring\",\r\n                      stiffness: 400,\r\n                      damping: 25\r\n                    }}\r\n                  >\r\n                    {current + 1} / {projects.length}\r\n                  </m.span>\r\n                </m.div>\r\n\r\n                <NavigationButton onClick={handleNext} direction=\"right\">→</NavigationButton>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <m.div \r\n              className=\"bg-[#2a2a2a] rounded-lg p-8 max-w-md mx-auto\"\r\n              initial={{ opacity: 0, scale: 0.9 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{\r\n                type: \"spring\",\r\n                stiffness: 300,\r\n                damping: 25\r\n              }}\r\n            >\r\n              <p className=\"text-gray-400 mb-6 text-lg\">Проекты не найдены</p>\r\n              <m.button\r\n                onClick={handleRetry}\r\n                className=\"bg-blue-500 text-white px-8 py-3 rounded-lg hover:bg-blue-600 transition-all duration-300 transform hover:scale-105 font-medium\"\r\n                whileHover={{ scale: 1.05 }}\r\n                whileTap={{ scale: 0.95 }}\r\n              >\r\n                Обновить\r\n              </m.button>\r\n            </m.div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default memo(Projects);\r\n"],"names":["cache","constructor","this","data","Map","set","key","value","timestamp","Date","now","get","item","delete","clear","ProjectCard","memo","_ref","project","onViewGithub","direction","scrollAnimation","useScrollAnimation","_jsxs","m","div","variants","fadeInFromRightVariant","className","children","_jsx","name","description","language","stars","button","onClick","link","whileHover","scale","whileTap","span","initial","translateY","transition","duration","displayName","NavigationButton","_ref2","opacity","x","animate","type","stiffness","damping","Projects","t","useLanguage","titleScrollAnimation","current","setCurrent","useState","setDirection","projects","setProjects","loading","setLoading","error","setError","retryCount","setRetryCount","useEffect","retryTimeout","isMounted","fetchProjects","async","navigator","onLine","repos","cachedData","console","log","headers","process","REACT_APP_GITHUB_TOKEN","Authorization","response","axios","timeout","status","Array","isArray","processedData","filter","repo","fork","private","map","html_url","stargazers_count","updatedAt","updated_at","sort","a","b","length","Error","code","message","getRepositories","prev","setTimeout","err","window","addEventListener","removeEventListener","clearTimeout","handleRetry","id","count","h2","zoomRotateVariant","_Fragment","AnimatePresence","mode","open","handlePrev","y","exit","handleNext"],"sourceRoot":""}