{"version":3,"file":"static/js/67.c86d7f0b.chunk.js","mappings":"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","sources":["utils/geoUtils.js","components/LocationAutocomplete.js","components/ProfileSetup.js"],"sourcesContent":["// utils/geoUtils.js\n// Получение города по координатам через Nominatim (OpenStreetMap)\nexport async function getCityByCoords(lat, lon) {\n  try {\n    const url = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lon}&format=json&accept-language=ru`;\n    const res = await fetch(url, { headers: { 'User-Agent': 'my-portfolio/1.0' } });\n    if (!res.ok) return '';\n    const data = await res.json();\n    // Варианты: city, town, village, state, country\n    return (\n      data.address.city ||\n      data.address.town ||\n      data.address.village ||\n      data.address.state ||\n      data.address.country ||\n      ''\n    );\n  } catch (e) {\n    return '';\n  }\n}\n","import React, { useState } from 'react';\n\n// Пример списка городов РФ (можно расширить или подключить внешний API)\nconst cities = [\n  'Москва',\n  'Санкт-Петербург',\n  'Новосибирск',\n  'Екатеринбург',\n  'Казань',\n  'Нижний Новгород',\n  'Челябинск',\n  'Самара',\n  'Ростов-на-Дону',\n  'Уфа',\n  'Красноярск',\n  'Воронеж',\n  'Пермь',\n  'Волгоград',\n  'Краснодар',\n  'Сочи',\n  'Омск',\n  'Тюмень',\n  'Иркутск',\n  'Хабаровск',\n  'Владивосток',\n  'Ярославль',\n  'Томск',\n  'Барнаул',\n  'Калининград',\n  'Саратов',\n  'Тула',\n  'Калуга',\n  'Курск',\n  'Белгород',\n  'Другой...'\n];\n\nconst LocationAutocomplete = ({ value, onChange, placeholder = 'Город, страна' }) => {\n  const [suggestions, setSuggestions] = useState([]);\n  const [show, setShow] = useState(false);\n\n  const handleInput = (e) => {\n    const val = e.target.value;\n    onChange(val);\n    if (val.length > 0) {\n      const filtered = cities.filter(city => city.toLowerCase().includes(val.toLowerCase()));\n      setSuggestions(filtered.length ? filtered : ['Другой...']);\n      setShow(true);\n    } else {\n      setSuggestions([]);\n      setShow(false);\n    }\n  };\n\n  const handleSelect = (city) => {\n    onChange(city === 'Другой...' ? '' : city);\n    setShow(false);\n  };\n\n  return (\n    <div className=\"relative\">\n      <input\n        type=\"text\"\n        value={value}\n        onChange={handleInput}\n        placeholder={placeholder}\n        className=\"w-full px-4 py-3 rounded-lg bg-[#181c23] border border-[#374151] text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition\"\n        autoComplete=\"off\"\n        onFocus={() => value && setShow(true)}\n        onBlur={() => setTimeout(() => setShow(false), 100)}\n      />\n      {show && suggestions.length > 0 && (\n        <ul className=\"absolute z-10 left-0 right-0 bg-[#23272f] border border-[#374151] rounded-lg mt-1 max-h-48 overflow-y-auto shadow-lg\">\n          {suggestions.map((city, idx) => (\n            <li\n              key={city + idx}\n              className=\"px-4 py-2 cursor-pointer hover:bg-blue-600 hover:text-white text-gray-200\"\n              onMouseDown={() => handleSelect(city)}\n            >\n              {city}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default LocationAutocomplete;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { IMaskInput } from 'react-imask';\nimport LocationAutocomplete from './LocationAutocomplete';\nimport { getCityByCoords } from '../utils/geoUtils';\n\nconst ProfileSetup = () => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [formData, setFormData] = useState({\n    fullName: '',\n    phone: '',\n    bio: '',\n    location: '',\n    skills: '',\n    github: '',\n    website: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!formData.location && typeof window !== 'undefined') {\n      const loc = localStorage.getItem('userLocation');\n      if (loc && loc !== 'denied' && loc !== 'unsupported') {\n        try {\n          const { lat, lon } = JSON.parse(loc);\n          getCityByCoords(lat, lon).then(city => {\n            if (city) setFormData(prev => ({ ...prev, location: city }));\n          });\n        } catch {}\n      }\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // Валидация профиля\n  function validateProfile(data) {\n    const errors = {};\n    if (!data.fullName || data.fullName.trim().length < 3) {\n      errors.fullName = 'Введите корректное ФИО (минимум 3 символа)';\n    }\n    if (!/^\\+7 \\(\\d{3}\\) \\d{3}-\\d{2}-\\d{2}$/.test(data.phone)) {\n      errors.phone = 'Введите телефон в формате +7 (XXX) XXX-XX-XX';\n    }\n    if (!user?.email || !/^\\S+@\\S+\\.\\S+$/.test(user.email)) {\n      errors.email = 'Некорректный email';\n    }\n    if (!data.location || data.location.trim().length < 2) {\n      errors.location = 'Укажите местоположение';\n    }\n    return errors;\n  }\n\n  const [validationErrors, setValidationErrors] = useState({});\n  const [autoSaveTimer, setAutoSaveTimer] = useState(null);\n\n  // Автосохранение при изменении\n  useEffect(() => {\n    if (!user) return;\n    if (autoSaveTimer) clearTimeout(autoSaveTimer);\n    const errors = validateProfile(formData);\n    setValidationErrors(errors);\n    if (Object.keys(errors).length === 0) {\n      const timer = setTimeout(() => {\n        const userDocRef = doc(db, 'users', user.uid);\n        setDoc(userDocRef, {\n          ...formData,\n          email: user.email,\n          updatedAt: new Date().toISOString()\n        }, { merge: true });\n      }, 1000);\n      setAutoSaveTimer(timer);\n      return () => clearTimeout(timer);\n    }\n    // eslint-disable-next-line\n  }, [formData]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handlePhone = (value) => {\n    setFormData(prev => ({ ...prev, phone: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      const userDocRef = doc(db, 'users', user.uid);\n      await setDoc(userDocRef, {\n        ...formData,\n        email: user.email,\n        updatedAt: new Date().toISOString()\n      }, { merge: true });\n\n      navigate('/profile');\n    } catch (err) {\n      console.error('Ошибка при сохранении профиля:', err);\n      setError('Произошла ошибка при сохранении данных профиля');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-[#121212] py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-xl w-full space-y-8 bg-[#23272f] p-8 rounded-2xl shadow-2xl border border-[#2d3748]\">\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-white\">\n          Настройка профиля\n        </h2>\n        {error && (\n          <div className=\"bg-red-500/20 border border-red-500 text-red-100 px-4 py-2 rounded mb-4\" role=\"alert\">\n            <span className=\"block sm:inline\">{error}</span>\n          </div>\n        )}\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                ФИО\n              </label>\n              <input\n                type=\"text\"\n                name=\"fullName\"\n                value={formData.fullName}\n                onChange={handleChange}\n                placeholder=\"Введите ФИО полностью\"\n                className={`w-full px-4 py-3 rounded-lg bg-[#181c23] border ${validationErrors.fullName ? 'border-red-500' : 'border-[#374151]'} text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition`}\n                required\n              />\n              {validationErrors.fullName && <div className=\"text-red-400 text-xs mt-1\">{validationErrors.fullName}</div>}\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                Телефон\n              </label>\n              <IMaskInput\n                mask=\"+7 (000) 000-00-00\"\n                value={formData.phone}\n                onAccept={handlePhone}\n                unmask={false}\n                placeholder=\"+7 (___) ___-__-__\"\n                className={`w-full px-4 py-3 rounded-lg bg-[#181c23] border ${validationErrors.phone ? 'border-red-500' : 'border-[#374151]'} text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition`}\n                required\n              />\n              {validationErrors.phone && <div className=\"text-red-400 text-xs mt-1\">{validationErrors.phone}</div>}\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                Email\n              </label>\n              <input\n                type=\"email\"\n                value={user?.email || ''}\n                readOnly\n                className={`w-full px-4 py-3 rounded-lg bg-[#181c23] border ${validationErrors.email ? 'border-red-500' : 'border-[#374151]'} text-gray-400 cursor-not-allowed`}\n              />\n              {validationErrors.email && <div className=\"text-red-400 text-xs mt-1\">{validationErrors.email}</div>}\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                О себе\n              </label>\n              <textarea\n                name=\"bio\"\n                value={formData.bio}\n                onChange={handleChange}\n                rows=\"3\"\n                placeholder=\"Расскажите о себе...\"\n                className=\"w-full px-4 py-3 rounded-lg bg-[#181c23] border border-[#374151] text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                Местоположение\n              </label>\n              <LocationAutocomplete\n                value={formData.location}\n                onChange={val => setFormData(prev => ({ ...prev, location: val }))}\n                placeholder=\"Город, страна\"\n              />\n              {validationErrors.location && <div className=\"text-red-400 text-xs mt-1\">{validationErrors.location}</div>}\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                Навыки\n              </label>\n              <input\n                type=\"text\"\n                name=\"skills\"\n                value={formData.skills}\n                onChange={handleChange}\n                placeholder=\"Например: React, Node.js, Python\"\n                className=\"w-full px-4 py-3 rounded-lg bg-[#181c23] border border-[#374151] text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition\"\n              />\n            </div>\n            <div className=\"flex gap-4\">\n              <div className=\"flex-1\">\n                <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                  GitHub\n                </label>\n                <input\n                  type=\"url\"\n                  name=\"github\"\n                  value={formData.github}\n                  onChange={handleChange}\n                  placeholder=\"https://github.com/username\"\n                  className=\"w-full px-4 py-3 rounded-lg bg-[#181c23] border border-[#374151] text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition\"\n                />\n              </div>\n              <div className=\"flex-1\">\n                <label className=\"block text-sm font-medium text-gray-300 mb-1\">\n                  Личный сайт\n                </label>\n                <input\n                  type=\"url\"\n                  name=\"website\"\n                  value={formData.website}\n                  onChange={handleChange}\n                  placeholder=\"https://example.com\"\n                  className=\"w-full px-4 py-3 rounded-lg bg-[#181c23] border border-[#374151] text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"pt-6 flex flex-col gap-4\">\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold text-lg shadow-md transition disabled:opacity-60\"\n            >\n              {loading ? 'Сохранение...' : 'Сохранить профиль'}\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => navigate('/profile')}\n              className=\"w-full py-3 rounded-lg bg-gray-700 hover:bg-gray-600 text-gray-200 font-semibold text-lg border border-gray-500 transition\"\n            >\n              Пропустить\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileSetup;"],"names":["async","getCityByCoords","lat","lon","url","res","fetch","headers","ok","data","json","address","city","town","village","state","country","e","cities","_ref","value","onChange","placeholder","suggestions","setSuggestions","useState","show","setShow","_jsxs","className","children","_jsx","type","val","target","length","filtered","filter","toLowerCase","includes","autoComplete","onFocus","onBlur","setTimeout","map","idx","onMouseDown","handleSelect","ProfileSetup","navigate","useNavigate","user","useAuth","formData","setFormData","fullName","phone","bio","location","skills","github","website","error","setError","loading","setLoading","useEffect","window","loc","localStorage","getItem","JSON","parse","then","prev","validationErrors","setValidationErrors","autoSaveTimer","setAutoSaveTimer","clearTimeout","errors","trim","test","email","validateProfile","Object","keys","timer","userDocRef","doc","db","uid","setDoc","updatedAt","Date","toISOString","merge","handleChange","name","role","onSubmit","preventDefault","err","console","required","IMaskInput","mask","onAccept","unmask","readOnly","rows","LocationAutocomplete","disabled","onClick"],"sourceRoot":""}