{"version":3,"file":"static/js/355.1776a9e1.chunk.js","mappings":"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","sources":["components/Auth.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { getAuth, RecaptchaVerifier } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [authMethod, setAuthMethod] = useState('email');\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [showVerificationInput, setShowVerificationInput] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const { login, signup, loginAnonymously, setupRecaptcha, confirmPhoneCode, loginWithGithub } = useAuth();\r\n\r\n  const getErrorMessage = (errorCode) => {\r\n    switch (errorCode) {\r\n      case 'auth/user-not-found':\r\n        return 'Пользователь с таким email не найден';\r\n      case 'auth/wrong-password':\r\n        return 'Неверный пароль';\r\n      case 'auth/email-already-in-use':\r\n        return 'Пользователь с таким email уже существует';\r\n      case 'auth/weak-password':\r\n        return 'Пароль должен содержать минимум 6 символов';\r\n      case 'auth/invalid-email':\r\n        return 'Некорректный email адрес';\r\n      case 'auth/invalid-phone-number':\r\n        return 'Неверный формат номера телефона';\r\n      case 'auth/invalid-verification-code':\r\n        return 'Неверный код подтверждения';\r\n      case 'auth/account-exists-with-different-credential':\r\n        return 'Аккаунт уже существует с другим методом входа';\r\n      case 'auth/popup-closed-by-user':\r\n        return 'Окно авторизации было закрыто. Попробуйте еще раз';\r\n      case 'auth/cancelled-popup-request':\r\n        return 'Предыдущий запрос авторизации не был завершен';\r\n      case 'auth/popup-blocked':\r\n        return 'Всплывающее окно заблокировано браузером. Пожалуйста, разрешите всплывающие окна для этого сайта';\r\n      case 'auth/unauthorized-domain':\r\n        return 'Этот домен не авторизован для работы с Firebase. Пожалуйста, проверьте настройки Firebase';\r\n      default:\r\n        return 'Произошла ошибка при авторизации';\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Очищаем старый рекапчу при размонтировании\r\n    return () => {\r\n      if (window.recaptchaVerifier) {\r\n        window.recaptchaVerifier.clear();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const setupRecaptchaVerifier = () => {\r\n    if (!window.recaptchaVerifier) {\r\n      window.recaptchaVerifier = new RecaptchaVerifier(auth, 'recaptcha-container', {\r\n        size: 'invisible',\r\n        callback: () => {\r\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n        },\r\n        'expired-callback': () => {\r\n          // Response expired. Ask user to solve reCAPTCHA again.\r\n          setError('Время действия проверки истекло. Попробуйте еще раз.');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const formatPhoneNumber = (phone) => {\r\n    // Убираем все нецифровые символы\r\n    const cleaned = phone.replace(/\\D/g, '');\r\n    // Добавляем '+' в начало, если его нет\r\n    return cleaned.startsWith('+') ? cleaned : `+${cleaned}`;\r\n  };\r\n\r\n  const handleEmailSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    try {\r\n      if (isLogin) {\r\n        await login(email, password);\r\n      } else {\r\n        if (password !== confirmPassword) {\r\n          setError('Пароли не совпадают');\r\n          return;\r\n        }\r\n        await signup(email, password);\r\n      }\r\n    } catch (err) {\r\n      setError(getErrorMessage(err.code));\r\n    }\r\n  };\r\n\r\n  const handlePhoneSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    try {\r\n      if (!showVerificationInput) {\r\n        setupRecaptchaVerifier();\r\n        const formattedPhone = formatPhoneNumber(phoneNumber);\r\n        console.log('Отправка кода на номер:', formattedPhone);\r\n        const appVerifier = window.recaptchaVerifier;\r\n        await setupRecaptcha(formattedPhone, appVerifier);\r\n        setShowVerificationInput(true);\r\n      } else {\r\n        if (!verificationCode || verificationCode.length < 6) {\r\n          setError('Введите корректный код подтверждения');\r\n          return;\r\n        }\r\n        console.log('Подтверждение кода:', verificationCode);\r\n        await confirmPhoneCode(verificationCode);\r\n      }\r\n    } catch (err) {\r\n      console.error('Ошибка телефонной авторизации:', err);\r\n      \r\n      if (err.code === 'auth/invalid-verification-code') {\r\n        setError('Неверный код подтверждения');\r\n      } else if (err.code === 'auth/invalid-phone-number') {\r\n        setError('Неверный формат номера телефона');\r\n      } else if (err.code === 'auth/code-expired') {\r\n        setError('Срок действия кода истек. Попробуйте получить новый код');\r\n        setShowVerificationInput(false);\r\n      } else if (err.code === 'auth/too-many-requests') {\r\n        setError('Слишком много попыток. Попробуйте позже');\r\n      } else if (err.message) {\r\n        setError(err.message);\r\n      } else {\r\n        setError('Произошла ошибка при авторизации');\r\n      }\r\n      \r\n      // Очищаем reCAPTCHA только если это не ошибка кода подтверждения\r\n      if (err.code !== 'auth/invalid-verification-code') {\r\n        if (window.recaptchaVerifier) {\r\n          window.recaptchaVerifier.clear();\r\n          window.recaptchaVerifier = null;\r\n        }\r\n        setShowVerificationInput(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAnonymousLogin = async () => {\r\n    setError('');\r\n    try {\r\n      await loginAnonymously();\r\n    } catch (err) {\r\n      setError(getErrorMessage(err.code));\r\n    }\r\n  };\r\n\r\n  const handleGithubLogin = async () => {\r\n    setError('');\r\n    try {\r\n      console.log('Начинаем GitHub авторизацию...');\r\n      await loginWithGithub();\r\n    } catch (err) {\r\n      console.error('Ошибка GitHub авторизации:', err);\r\n      if (err.code) {\r\n        setError(getErrorMessage(err.code));\r\n      } else if (err.message) {\r\n        setError(err.message);\r\n      } else {\r\n        setError('Произошла непредвиденная ошибка при авторизации через GitHub');\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n    setPhoneNumber('');\r\n    setVerificationCode('');\r\n    setShowVerificationInput(false);\r\n    setError('');\r\n  };\r\n\r\n  const switchAuthMode = () => {\r\n    setIsLogin(!isLogin);\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-[calc(100vh-4rem)] bg-[#121212] flex flex-col items-center justify-center px-6\">\r\n      <div className=\"w-full max-w-md bg-[#1f1f1f] p-8 rounded-lg shadow-lg\">\r\n        <h2 className=\"text-2xl font-bold text-white mb-6 text-center\">\r\n          {isLogin ? 'Вход в аккаунт' : 'Создание аккаунта'}\r\n        </h2>\r\n\r\n        <div className=\"flex justify-center gap-4 mb-6\">\r\n          <button\r\n            onClick={() => {\r\n              setAuthMethod('email');\r\n              resetForm();\r\n            }}\r\n            className={`px-4 py-2 rounded ${\r\n              authMethod === 'email' ? 'bg-blue-500' : 'bg-gray-700'\r\n            } text-white`}\r\n          >\r\n            Email\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setAuthMethod('github');\r\n              resetForm();\r\n            }}\r\n            className={`px-4 py-2 rounded ${\r\n              authMethod === 'github' ? 'bg-blue-500' : 'bg-gray-700'\r\n            } text-white flex items-center gap-2`}\r\n          >\r\n            <svg viewBox=\"0 0 24 24\" className=\"w-5 h-5 fill-current\">\r\n              <path d=\"M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z\"/>\r\n            </svg>\r\n            GitHub\r\n          </button>\r\n          {isLogin && (\r\n            <button\r\n              onClick={() => {\r\n                setAuthMethod('anonymous');\r\n                resetForm();\r\n              }}\r\n              className={`px-4 py-2 rounded ${\r\n                authMethod === 'anonymous' ? 'bg-blue-500' : 'bg-gray-700'\r\n              } text-white`}\r\n            >\r\n              Анонимно\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-500/20 border border-red-500 text-red-100 p-4 rounded mb-6\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {authMethod === 'email' && (\r\n          <form onSubmit={handleEmailSubmit} className=\"flex flex-col gap-4\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"p-3 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 outline-none transition-colors\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Пароль\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"p-3 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 outline-none transition-colors\"\r\n              required\r\n            />\r\n            {!isLogin && (\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Подтвердите пароль\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                className=\"p-3 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 outline-none transition-colors\"\r\n                required\r\n              />\r\n            )}\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-blue-500 text-white px-6 py-3 rounded hover:bg-blue-600 transition-colors font-semibold\"\r\n            >\r\n              {isLogin ? 'Войти' : 'Создать аккаунт'}\r\n            </button>\r\n          </form>\r\n        )}\r\n\r\n        {authMethod === 'phone' && (\r\n          <form onSubmit={handlePhoneSubmit} className=\"flex flex-col gap-4\">\r\n            <div className=\"phone-input-container\">\r\n              <PhoneInput\r\n                country={'ru'}\r\n                value={phoneNumber}\r\n                onChange={(phone) => {\r\n                  console.log('Введен номер телефона:', phone);\r\n                  setPhoneNumber(phone);\r\n                }}\r\n                disabled={showVerificationInput}\r\n                containerClass=\"phone-input\"\r\n                inputClass=\"!w-full !h-12 !text-white !bg-gray-700 !border-gray-600 !pl-12 !rounded\"\r\n                buttonClass=\"!bg-gray-700 !border-gray-600 !rounded-l\"\r\n                dropdownClass=\"!bg-gray-700 !text-white\"\r\n                searchClass=\"!bg-gray-800 !text-white\"\r\n                enableSearch={true}\r\n                searchPlaceholder=\"Поиск страны...\"\r\n                inputProps={{\r\n                  required: true,\r\n                  placeholder: \"Номер телефона\"\r\n                }}\r\n              />\r\n            </div>\r\n            {showVerificationInput && (\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Код подтверждения\"\r\n                value={verificationCode}\r\n                onChange={(e) => {\r\n                  console.log('Введен код:', e.target.value);\r\n                  setVerificationCode(e.target.value);\r\n                }}\r\n                className=\"p-3 rounded bg-gray-700 text-white border border-gray-600 focus:border-blue-500 outline-none transition-colors\"\r\n                required\r\n              />\r\n            )}\r\n            <div id=\"recaptcha-container\"></div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-blue-500 text-white px-6 py-3 rounded hover:bg-blue-600 transition-colors font-semibold\"\r\n            >\r\n              {showVerificationInput ? 'Подтвердить код' : (isLogin ? 'Войти' : 'Создать аккаунт')}\r\n            </button>\r\n          </form>\r\n        )}\r\n\r\n        {authMethod === 'github' && (\r\n          <button\r\n            onClick={handleGithubLogin}\r\n            className=\"w-full bg-gray-800 text-white px-6 py-3 rounded hover:bg-gray-700 transition-colors font-semibold flex items-center justify-center gap-2\"\r\n          >\r\n            <svg viewBox=\"0 0 24 24\" className=\"w-6 h-6 fill-current\">\r\n              <path d=\"M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z\"/>\r\n            </svg>\r\n            {isLogin ? 'Войти через GitHub' : 'Зарегистрироваться через GitHub'}\r\n          </button>\r\n        )}\r\n\r\n        {authMethod === 'anonymous' && (\r\n          <button\r\n            onClick={handleAnonymousLogin}\r\n            className=\"w-full bg-blue-500 text-white px-6 py-3 rounded hover:bg-blue-600 transition-colors font-semibold\"\r\n          >\r\n            Войти анонимно\r\n          </button>\r\n        )}\r\n\r\n        <button\r\n          onClick={switchAuthMode}\r\n          className=\"text-blue-400 mt-6 hover:underline w-full text-center\"\r\n        >\r\n          {isLogin ? 'Создать новый аккаунт' : 'Уже есть аккаунт? Войти'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;"],"names":["Auth","email","setEmail","useState","password","setPassword","confirmPassword","setConfirmPassword","phoneNumber","setPhoneNumber","verificationCode","setVerificationCode","authMethod","setAuthMethod","isLogin","setIsLogin","showVerificationInput","setShowVerificationInput","error","setError","login","signup","loginAnonymously","setupRecaptcha","confirmPhoneCode","loginWithGithub","useAuth","getErrorMessage","errorCode","useEffect","window","recaptchaVerifier","clear","resetForm","_jsx","className","children","_jsxs","onClick","viewBox","d","onSubmit","async","e","preventDefault","err","code","type","placeholder","value","onChange","target","required","length","console","log","RecaptchaVerifier","auth","size","callback","expired-callback","formattedPhone","phone","cleaned","replace","startsWith","formatPhoneNumber","appVerifier","message","PhoneInput","country","disabled","containerClass","inputClass","buttonClass","dropdownClass","searchClass","enableSearch","searchPlaceholder","inputProps","id","switchAuthMode"],"sourceRoot":""}