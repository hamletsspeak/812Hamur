{"version":3,"file":"static/js/396.4f71c0df.chunk.js","mappings":"2LAMA,MA0DA,EA1DcA,KACZ,MAAM,EAAEC,EAAC,SAAEC,IAAaC,EAAAA,EAAAA,KAElBC,ECPD,SAAuBC,GAAmB,IAAbC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAE1C,MAAOG,EAASC,IAAcC,EAAAA,EAAAA,UAASP,EAAKG,QAe5C,OAbAK,EAAAA,EAAAA,YAAU,KAER,GADAF,EAAW,IACNN,EAAM,OACX,IAAIS,EAAI,EACR,MAAMC,EAAWC,aAAY,KAC3BF,IACAH,EAAWG,GACPA,GAAKT,EAAKG,QAAQS,cAAcF,EAAS,GAC5CT,GACH,MAAO,IAAMW,cAAcF,EAAS,GACnC,CAACV,EAAMC,IAGHY,MAAMC,KAAKd,GAAMe,KAAI,CAACC,EAAMC,KAAG,CACpCD,OACAE,QAASD,EAAMZ,KAEnB,CDdoBc,CADAvB,EAAe,OAAbC,EAAoB,YAAc,gBAGtD,OACEuB,EAAAA,EAAAA,MAAA,WACEC,GAAG,QACHC,UAAU,0HAAyHC,SAAA,EAEnIC,EAAAA,EAAAA,KAACC,EAAAA,EAAEC,IAAG,CACJJ,UAAU,oEACVK,QAAS,CAAEC,QAAS,GACpBC,YAAa,CAAED,QAAS,GACxBE,WAAY,CAAEC,SAAU,MAG1BX,EAAAA,EAAAA,MAAA,OAAKE,UAAU,qDAAoDC,SAAA,EACjEC,EAAAA,EAAAA,KAACC,EAAAA,EAAEO,GAAE,CACHV,UAAU,mDACVW,SAAUC,EAAAA,OACNC,EAAAA,EAAAA,MAAoBZ,SAEvB3B,EAAE,iBAGLwB,EAAAA,EAAAA,MAACK,EAAAA,EAAEC,IAAG,CACJJ,UAAU,YACVW,SAAUG,EAAAA,GAAsBb,SAAA,EAEhCC,EAAAA,EAAAA,KAACC,EAAAA,EAAEY,EAAC,CACFf,UAAU,8DAA6DC,SAEtExB,EAAUgB,KAAI,CAACuB,EAAMrB,KACpBO,EAAAA,EAAAA,KAAA,QAAgBF,UAAWgB,EAAKpB,QAAU,QAAU,YAAYK,SAAEe,EAAKtB,MAA5DC,QAIfO,EAAAA,EAAAA,KAACC,EAAAA,EAAEC,IAAG,CACJJ,UAAU,6CACVW,SAAU,CACRM,OAAQ,CAAEX,QAAS,GACnBV,QAAS,CACPU,QAAS,EACTE,WAAY,CACVU,gBAAiB,UAInBL,EAAAA,EAAAA,IAAmB,cAKrB,C","sources":["About.js","components/useTypewriter.js"],"sourcesContent":["import React from \"react\";\nimport { m } from \"framer-motion\";\nimport { fadeInFromLeftVariant, zoomRotateVariant, useScrollAnimation } from \"./config/animations\";\nimport { useLanguage } from \"./contexts/LanguageContext\";\nimport { useTypewriter } from \"./components/useTypewriter\";\n\nconst About = () => {\n  const { t, language } = useLanguage();\n  const aboutText = t(language === 'ru' ? 'aboutText' : 'aboutTextEn');\n  const typedText = useTypewriter(aboutText);\n\n  return (\n    <section\n      id=\"about\"\n      className=\"snap-start min-h-screen flex flex-col items-center justify-center px-6 text-white bg-[#121212] relative overflow-hidden\"\n    >\n      <m.div\n        className=\"absolute inset-0 bg-gradient-to-b from-blue-500/5 to-purple-500/5\"\n        initial={{ opacity: 0 }}\n        whileInView={{ opacity: 1 }}\n        transition={{ duration: 1 }}\n      />\n      \n      <div className=\"max-w-3xl w-full mx-auto text-center relative z-10\">\n        <m.h2 \n          className=\"text-5xl sm:text-7xl font-bold mb-8 shimmer-text\"\n          variants={zoomRotateVariant}\n          {...useScrollAnimation()}\n        >\n          {t(\"aboutTitle\")}\n        </m.h2>\n        \n        <m.div \n          className=\"space-y-6\"\n          variants={fadeInFromLeftVariant}\n        >\n          <m.p \n            className=\"text-xl leading-relaxed typewriter-effect minecraft-en-font\"\n          >\n            {typedText.map((item, idx) => (\n              <span key={idx} className={item.visible ? \"typed\" : \"not-typed\"}>{item.char}</span>\n            ))}\n          </m.p>\n          \n          <m.div\n            className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mt-8\"\n            variants={{\n              hidden: { opacity: 0 },\n              visible: {\n                opacity: 1,\n                transition: {\n                  staggerChildren: 0.1\n                }\n              }\n            }}\n            {...useScrollAnimation(0.3)}\n          >\n          </m.div>\n        </m.div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","import { useState, useEffect } from \"react\";\n\nexport function useTypewriter(text, speed = 30) {\n  // Показываем весь текст сразу, но для анимации печати возвращаем массив символов с флагом \"напечатан/нет\"\n  const [printed, setPrinted] = useState(text.length);\n\n  useEffect(() => {\n    setPrinted(0);\n    if (!text) return;\n    let i = 0;\n    const interval = setInterval(() => {\n      i++;\n      setPrinted(i);\n      if (i >= text.length) clearInterval(interval);\n    }, speed);\n    return () => clearInterval(interval);\n  }, [text, speed]);\n\n  // Возвращаем массив: каждый символ с флагом \"напечатан\" (true/false)\n  return Array.from(text).map((char, idx) => ({\n    char,\n    visible: idx < printed\n  }));\n}\n"],"names":["About","t","language","useLanguage","typedText","text","speed","arguments","length","undefined","printed","setPrinted","useState","useEffect","i","interval","setInterval","clearInterval","Array","from","map","char","idx","visible","useTypewriter","_jsxs","id","className","children","_jsx","m","div","initial","opacity","whileInView","transition","duration","h2","variants","zoomRotateVariant","useScrollAnimation","fadeInFromLeftVariant","p","item","hidden","staggerChildren"],"sourceRoot":""}