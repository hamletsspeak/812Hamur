{"version":3,"file":"static/js/41.bc807392.chunk.js","mappings":"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","sources":["utils/geoUtils.js","components/LocationAutocomplete.js","components/Toast.js","Profile.js"],"sourcesContent":["// utils/geoUtils.js\n// Получение города по координатам через Nominatim (OpenStreetMap)\nexport async function getCityByCoords(lat, lon) {\n  try {\n    const url = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lon}&format=json&accept-language=ru`;\n    const res = await fetch(url, { headers: { 'User-Agent': 'my-portfolio/1.0' } });\n    if (!res.ok) return '';\n    const data = await res.json();\n    // Варианты: city, town, village, state, country\n    return (\n      data.address.city ||\n      data.address.town ||\n      data.address.village ||\n      data.address.state ||\n      data.address.country ||\n      ''\n    );\n  } catch (e) {\n    return '';\n  }\n}\n","import React, { useState } from 'react';\n\n// Пример списка городов РФ (можно расширить или подключить внешний API)\nconst cities = [\n  'Москва',\n  'Санкт-Петербург',\n  'Новосибирск',\n  'Екатеринбург',\n  'Казань',\n  'Нижний Новгород',\n  'Челябинск',\n  'Самара',\n  'Ростов-на-Дону',\n  'Уфа',\n  'Красноярск',\n  'Воронеж',\n  'Пермь',\n  'Волгоград',\n  'Краснодар',\n  'Сочи',\n  'Омск',\n  'Тюмень',\n  'Иркутск',\n  'Хабаровск',\n  'Владивосток',\n  'Ярославль',\n  'Томск',\n  'Барнаул',\n  'Калининград',\n  'Саратов',\n  'Тула',\n  'Калуга',\n  'Курск',\n  'Белгород',\n  'Другой...'\n];\n\nconst LocationAutocomplete = ({ value, onChange, placeholder = 'Город, страна' }) => {\n  const [suggestions, setSuggestions] = useState([]);\n  const [show, setShow] = useState(false);\n\n  const handleInput = (e) => {\n    const val = e.target.value;\n    onChange(val);\n    if (val.length > 0) {\n      const filtered = cities.filter(city => city.toLowerCase().includes(val.toLowerCase()));\n      setSuggestions(filtered.length ? filtered : ['Другой...']);\n      setShow(true);\n    } else {\n      setSuggestions([]);\n      setShow(false);\n    }\n  };\n\n  const handleSelect = (city) => {\n    onChange(city === 'Другой...' ? '' : city);\n    setShow(false);\n  };\n\n  return (\n    <div className=\"relative\">\n      <input\n        type=\"text\"\n        value={value}\n        onChange={handleInput}\n        placeholder={placeholder}\n        className=\"w-full px-4 py-3 rounded-lg bg-[#181c23] border border-[#374151] text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition\"\n        autoComplete=\"off\"\n        onFocus={() => value && setShow(true)}\n        onBlur={() => setTimeout(() => setShow(false), 100)}\n      />\n      {show && suggestions.length > 0 && (\n        <ul className=\"absolute z-10 left-0 right-0 bg-[#23272f] border border-[#374151] rounded-lg mt-1 max-h-48 overflow-y-auto shadow-lg\">\n          {suggestions.map((city, idx) => (\n            <li\n              key={city + idx}\n              className=\"px-4 py-2 cursor-pointer hover:bg-blue-600 hover:text-white text-gray-200\"\n              onMouseDown={() => handleSelect(city)}\n            >\n              {city}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default LocationAutocomplete;\n","import React, { useEffect, useState } from 'react';\n\nconst FADE_DURATION = 400; // миллисекунд\n\nconst Toast = ({ message, type = 'success', onClose, duration = 1000 }) => {\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    // Плавное появление\n    const showTimer = setTimeout(() => {\n      setVisible(true);\n    }, 10); // небольшой таймаут для срабатывания transition\n\n    // Скрываем уведомление чуть раньше, чтобы успела проиграться анимация\n    const hideTimer = setTimeout(() => {\n      setVisible(false);\n    }, duration - FADE_DURATION);\n\n    // onClose вызываем после fade-out\n    const closeTimer = setTimeout(() => {\n      onClose();\n    }, duration);\n\n    return () => {\n      clearTimeout(showTimer);\n      clearTimeout(hideTimer);\n      clearTimeout(closeTimer);\n    };\n  }, [duration, onClose]);\n\n  const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';\n\n  return (\n    <div\n      className={`fixed inset-x-0 top-4 mx-auto z-50 flex justify-center pointer-events-none transition-opacity duration-[${FADE_DURATION}ms] ${visible ? 'opacity-100' : 'opacity-0'}`}\n      style={{ transition: `opacity ${FADE_DURATION}ms cubic-bezier(0.4,0,0.2,1)` }}\n    >\n      <div\n        className={`${bgColor} text-white px-6 py-3 rounded-lg shadow-lg max-w-sm text-center pointer-events-auto transition-transform duration-[${FADE_DURATION}ms] ${visible ? 'scale-100' : 'scale-95'}`}\n        style={{ transition: `transform ${FADE_DURATION}ms cubic-bezier(0.4,0,0.2,1)` }}\n      >\n        {message}\n      </div>\n    </div>\n  );\n};\n\nexport default Toast;","import React, { useState, useEffect } from 'react';\nimport { useAuth } from './contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport Auth from './components/Auth';\nimport { subscribeToUserData } from './services/databaseService';\nimport Toast from './components/Toast';\nimport { IMaskInput } from 'react-imask';\nimport LocationAutocomplete from './components/LocationAutocomplete';\nimport { getCityByCoords } from './utils/geoUtils';\nimport { useLanguage } from './contexts/LanguageContext';\n\nconst Profile = () => {\n  const { user, logout, updateUserProfile } = useAuth();\n  const navigate = useNavigate();\n  const { t } = useLanguage();\n  const [userInfo, setUserInfo] = useState({\n    fullName: '',\n    phone: '',\n    displayName: '',\n    bio: '',\n    location: '',\n    skills: '',\n    github: '',\n    website: '',\n    email: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [toast, setToast] = useState({ show: false, message: '', type: 'success' });\n  const [profileError, setProfileError] = useState('');\n  const [validationErrors] = useState({});\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (user) {\n      unsubscribe = subscribeToUserData(user.uid, (data) => {\n        let location = data.location || '';\n        // Если поле location пустое, пробуем взять из localStorage (геолокация)\n        if (!location && typeof window !== 'undefined') {\n          const loc = localStorage.getItem('userLocation');\n          if (loc && loc !== 'denied' && loc !== 'unsupported') {\n            try {\n              const { lat, lon } = JSON.parse(loc);\n              getCityByCoords(lat, lon).then(city => {\n                if (city) setUserInfo(prev => ({ ...prev, location: city }));\n              });\n            } catch {}\n          }\n        }\n        setUserInfo({\n          fullName: data.fullName || '',\n          phone: data.phone || '',\n          displayName: data.displayName || '',\n          bio: data.bio || '',\n          location: location,\n          skills: data.skills || '',\n          github: data.github || '',\n          website: data.website || '',\n          email: user.email || ''\n        });\n      });\n    }\n\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, [user]);\n\n  const showToast = (message, type = 'success') => {\n    setToast({ show: true, message: typeof message === 'string' ? t(message) : message, type });\n    setTimeout(() => {\n      setToast({ show: false, message: '', type: 'success' });\n    }, 1000);\n  };\n\n  const handleLogout = async () => {\n    setIsLoading(true);\n    try {\n      await logout();\n      navigate('/');\n    } catch (err) {\n      showToast('logoutError', 'error');\n      console.error('Ошибка при выходе:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSaveProfile = async () => {\n    setIsLoading(true);\n    setProfileError('');\n    try {\n      await updateUserProfile(userInfo);\n      showToast('profileUpdated');\n    } catch (err) {\n      console.error('Ошибка при обновлении профиля:', err);\n      setProfileError(err.message || String(err));\n      showToast('profileUpdateError', 'error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (!user) {\n    return <Auth />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#121212] py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-xl mx-auto bg-[#23272f] rounded-2xl shadow-2xl overflow-hidden border border-[#2d3748]\">\n        {toast.show && (\n          <div className=\"pointer-events-none\">\n            <Toast \n              message={toast.message} \n              type={toast.type} \n              onClose={() => setToast({ show: false, message: '', type: 'success' })}\n            />\n          </div>\n        )}\n        <div className=\"px-8 py-8 sm:p-10\">\n          <div className=\"flex justify-end mb-6\">\n            <button\n              onClick={handleLogout}\n              disabled={isLoading}\n              className=\"px-5 py-2 rounded-lg bg-red-600 hover:bg-red-700 text-white font-semibold shadow-md transition disabled:opacity-60\"\n            >\n              {isLoading ? t('loggingOut') : t('logout')}\n            </button>\n          </div>\n          <h3 className=\"text-2xl font-bold text-white mb-8 text-center tracking-wide\">\n            {t('personalData')}\n          </h3>\n          {profileError && (\n            <div className=\"bg-red-500/20 border border-red-500 text-red-100 px-4 py-2 rounded mb-4\">\n              {profileError}\n            </div>\n          )}\n          <form className=\"space-y-6\" onSubmit={e => { e.preventDefault(); handleSaveProfile(); }}>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">{t('fullName')}</label>\n              <input\n                type=\"text\"\n                value={userInfo.fullName}\n                onChange={e => setUserInfo({ ...userInfo, fullName: e.target.value })}\n                placeholder={t('fullNamePlaceholder')}\n                className={`w-full px-4 py-3 rounded-lg bg-[#181c23] border ${validationErrors.fullName ? 'border-red-500' : 'border-[#374151]'} text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition`}\n                required\n              />\n              {validationErrors.fullName && <div className=\"text-red-400 text-xs mt-1\">{t(validationErrors.fullName)}</div>}\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">{t('phone')}</label>\n              <IMaskInput\n                mask=\"+7 (000) 000-00-00\"\n                value={userInfo.phone}\n                onAccept={value => setUserInfo({ ...userInfo, phone: value })}\n                unmask={false}\n                placeholder={t('phonePlaceholder')}\n                className={`w-full px-4 py-3 rounded-lg bg-[#181c23] border ${validationErrors.phone ? 'border-red-500' : 'border-[#374151]'} text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition`}\n                required\n              />\n              {validationErrors.phone && <div className=\"text-red-400 text-xs mt-1\">{t(validationErrors.phone)}</div>}\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">Email</label>\n              <input\n                type=\"email\"\n                value={userInfo.email}\n                readOnly\n                className={`w-full px-4 py-3 rounded-lg bg-[#181c23] border ${validationErrors.email ? 'border-red-500' : 'border-[#374151]'} text-gray-400 cursor-not-allowed`}\n              />\n              {validationErrors.email && <div className=\"text-red-400 text-xs mt-1\">{t(validationErrors.email)}</div>}\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">{t('about')}</label>\n              <textarea\n                value={userInfo.bio}\n                onChange={e => setUserInfo({ ...userInfo, bio: e.target.value })}\n                rows=\"3\"\n                placeholder={t('aboutPlaceholder')}\n                className=\"w-full px-4 py-3 rounded-lg bg-[#181c23] border border-[#374151] text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">{t('location')}</label>\n              <LocationAutocomplete\n                value={userInfo.location}\n                onChange={val => setUserInfo({ ...userInfo, location: val })}\n                placeholder={t('locationPlaceholder')}\n              />\n              {validationErrors.location && <div className=\"text-red-400 text-xs mt-1\">{t(validationErrors.location)}</div>}\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-300 mb-1\">{t('skills')}</label>\n              <input\n                type=\"text\"\n                value={userInfo.skills}\n                onChange={e => setUserInfo({ ...userInfo, skills: e.target.value })}\n                placeholder={t('skillsPlaceholder')}\n                className=\"w-full px-4 py-3 rounded-lg bg-[#181c23] border border-[#374151] text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition\"\n              />\n            </div>\n            <div className=\"flex gap-4\">\n              <div className=\"flex-1\">\n                <label className=\"block text-sm font-medium text-gray-300 mb-1\">GitHub</label>\n                <input\n                  type=\"url\"\n                  value={userInfo.github}\n                  onChange={e => setUserInfo({ ...userInfo, github: e.target.value })}\n                  placeholder=\"https://github.com/username\"\n                  className=\"w-full px-4 py-3 rounded-lg bg-[#181c23] border border-[#374151] text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition\"\n                />\n              </div>\n              <div className=\"flex-1\">\n                <label className=\"block text-sm font-medium text-gray-300 mb-1\">{t('website')}</label>\n                <input\n                  type=\"url\"\n                  value={userInfo.website}\n                  onChange={e => setUserInfo({ ...userInfo, website: e.target.value })}\n                  placeholder=\"https://example.com\"\n                  className=\"w-full px-4 py-3 rounded-lg bg-[#181c23] border border-[#374151] text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition\"\n                />\n              </div>\n            </div>\n            <div className=\"pt-6\">\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-semibold text-lg shadow-md transition disabled:opacity-60\"\n              >\n                {isLoading ? t('saving') : t('saveChanges')}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;"],"names":["async","getCityByCoords","lat","lon","url","res","fetch","headers","ok","data","json","address","city","town","village","state","country","e","cities","_ref","value","onChange","placeholder","suggestions","setSuggestions","useState","show","setShow","_jsxs","className","children","_jsx","type","val","target","length","filtered","filter","toLowerCase","includes","autoComplete","onFocus","onBlur","setTimeout","map","idx","onMouseDown","handleSelect","FADE_DURATION","message","onClose","duration","visible","setVisible","useEffect","showTimer","hideTimer","closeTimer","clearTimeout","bgColor","style","transition","Profile","user","logout","updateUserProfile","useAuth","navigate","useNavigate","t","useLanguage","userInfo","setUserInfo","fullName","phone","displayName","bio","location","skills","github","website","email","isLoading","setIsLoading","toast","setToast","profileError","setProfileError","validationErrors","unsubscribe","subscribeToUserData","uid","window","loc","localStorage","getItem","JSON","parse","then","prev","showToast","arguments","undefined","Toast","onClick","err","console","error","disabled","onSubmit","preventDefault","String","handleSaveProfile","required","IMaskInput","mask","onAccept","unmask","readOnly","rows","LocationAutocomplete","Auth"],"sourceRoot":""}