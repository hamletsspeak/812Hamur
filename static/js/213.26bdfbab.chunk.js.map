{"version":3,"file":"static/js/213.26bdfbab.chunk.js","mappings":"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","sources":["services/cloudinaryService.js","components/Toast.js","Profile.js","services/storageService.js"],"sourcesContent":["const CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/dkpomb0py/upload';\nconst UPLOAD_PRESET = 'my_portfolio_preset';\n\n// Обновляем конфигурацию для аватаров\nconst AVATAR_CONFIG = {\n  maxWidth: 400,\n  maxHeight: 400,\n  quality: 0.8,\n  maxFileSize: 5 * 1024 * 1024, // 5MB\n  acceptedTypes: ['image/jpeg', 'image/png', 'image/webp']\n};\n\nconst optimizeImage = (file) => {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = (e) => {\n      const img = new Image();\n      img.src = e.target.result;\n      img.onload = () => {\n        const canvas = document.createElement('canvas');\n        const { maxWidth, maxHeight } = AVATAR_CONFIG;\n        let width = img.width;\n        let height = img.height;\n\n        if (width > height) {\n          if (width > maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n          }\n        } else {\n          if (height > maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n          }\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0, width, height);\n        \n        canvas.toBlob(\n          (blob) => {\n            resolve(new File([blob], file.name, { \n              type: 'image/jpeg',\n              lastModified: Date.now()\n            }));\n          }, \n          'image/jpeg', \n          AVATAR_CONFIG.quality\n        );\n      };\n    };\n  });\n};\n\nexport const uploadImageToCloudinary = async (file, userId) => {\n  try {\n    if (file.size > AVATAR_CONFIG.maxFileSize) {\n      throw new Error(`Файл слишком большой. Максимальный размер ${AVATAR_CONFIG.maxFileSize / 1024 / 1024}MB`);\n    }\n    \n    if (!AVATAR_CONFIG.acceptedTypes.includes(file.type)) {\n      throw new Error('Неподдерживаемый формат файла. Допустимы: JPG, PNG, WebP');\n    }\n\n    const optimizedFile = await optimizeImage(file);\n    \n    const formData = new FormData();\n    formData.append('file', optimizedFile);\n    formData.append('upload_preset', UPLOAD_PRESET);\n    formData.append('folder', 'avatars');\n    formData.append('public_id', `user_${userId}_${Date.now()}`); // Добавляем timestamp для уникальности\n    formData.append('transformation', 'w_400,h_400,c_fill,g_face'); // Crop по лицу\n\n    const response = await fetch(CLOUDINARY_URL, {\n      method: 'POST',\n      body: formData\n    });\n\n    if (!response.ok) {\n      throw new Error('Ошибка при загрузке изображения');\n    }\n\n    const data = await response.json();\n    return {\n      url: data.secure_url,\n      publicId: data.public_id,\n      width: data.width,\n      height: data.height\n    };\n  } catch (error) {\n    console.error('Ошибка при загрузке в Cloudinary:', error);\n    throw error;\n  }\n};\n","import React, { useEffect } from 'react';\n\nconst Toast = ({ message, type = 'success', onClose, duration = 3000 }) => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, duration);\n\n    return () => clearTimeout(timer);\n  }, [duration, onClose]);\n\n  const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';\n\n  return (\n    <div className=\"fixed inset-x-0 top-4 mx-auto z-50 flex justify-center animate-fade-in-down\">\n      <div className={`${bgColor} text-white px-6 py-3 rounded-lg shadow-lg max-w-sm text-center`}>\n        {message}\n      </div>\n    </div>\n  );\n};\n\nexport default Toast;","import React, { useState, useRef, useEffect } from 'react';\nimport { useAuth } from './contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport Auth from './components/Auth';\nimport { uploadUserAvatar } from './services/storageService';\nimport { subscribeToUserData } from './services/databaseService';\nimport Toast from './components/Toast';\n\nconst Profile = () => {\n  const { user, logout, updateUserProfile, updateUserPassword } = useAuth();\n  const navigate = useNavigate();\n  const [isEditing, setIsEditing] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    displayName: user?.displayName || '',\n    about: user?.additionalData?.about || '',\n    skills: user?.additionalData?.skills || []\n  });\n  const [userData, setUserData] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n  const [toast, setToast] = useState({ show: false, message: '', type: 'success' });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAvatarLoading, setIsAvatarLoading] = useState(false);\n  const fileInputRef = useRef();\n\n  useEffect(() => {\n    let unsubscribe;\n    \n    if (user) {\n      unsubscribe = subscribeToUserData(user.uid, (data) => {\n        setUserData(data);\n        setUserInfo(prev => ({\n          ...prev,\n          displayName: data?.displayName || user.displayName || '',\n          about: data?.about || '',\n          skills: data?.skills || []\n        }));\n      });\n    }\n\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, [user]);\n\n  const showToast = (message, type = 'success') => {\n    setToast({ show: true, message, type });\n  };\n\n  const hideToast = () => {\n    setToast({ show: false, message: '', type: 'success' });\n  };\n\n  const handleLogout = async () => {\n    setIsLoading(true);\n    try {\n      await logout();\n      navigate('/');\n    } catch (err) {\n      showToast('Ошибка при выходе из системы. Попробуйте еще раз', 'error');\n      console.error('Ошибка при выходе:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleBack = () => {\n    navigate('/');\n  };\n\n  const handleSaveProfile = async () => {\n    try {\n      // Сохраняем все поля включая about и skills\n      await updateUserProfile({\n        displayName: userInfo.displayName,\n        photoURL: user.photoURL,\n        about: userInfo.about,\n        skills: userInfo.skills,\n        email: user.email,\n      });\n\n      // Обновляем локальное состояние\n      setUserData(prev => ({\n        ...prev,\n        displayName: userInfo.displayName,\n        about: userInfo.about,\n        skills: userInfo.skills\n      }));\n\n      showToast('Профиль успешно обновлен');\n      setIsEditing(false);\n    } catch (err) {\n      console.error('Ошибка при обновлении профиля:', err);\n      showToast('Ошибка при обновлении профиля', 'error');\n    }\n  };\n\n  const handleChangePassword = async () => {\n    try {\n      if (newPassword.length < 6) {\n        showToast('Пароль должен быть не менее 6 символов', 'error');\n        return;\n      }\n      await updateUserPassword(newPassword);\n      showToast('Пароль успешно изменен');\n      setNewPassword('');\n    } catch (err) {\n      showToast('Ошибка при смене пароля', 'error');\n    }\n  };\n\n  const handleAvatarClick = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    try {\n      setIsAvatarLoading(true);\n      const photoURL = await uploadUserAvatar(user.uid, file);\n      \n      await updateUserProfile({\n        ...userInfo,\n        photoURL\n      });\n\n      showToast('Аватар успешно обновлен');\n    } catch (err) {\n      console.error('Ошибка при загрузке аватара:', err);\n      showToast(err.message || 'Ошибка при загрузке аватара', 'error');\n    } finally {\n      setIsAvatarLoading(false);\n    }\n  };\n\n  if (!user) {\n    return <Auth isOpen={true} onClose={() => navigate('/')} />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#121212] pt-20\">\n      {toast.show && (\n        <Toast\n          message={toast.message}\n          type={toast.type}\n          onClose={hideToast}\n        />\n      )}\n      \n      <div className=\"container mx-auto px-4\">\n        <div className=\"bg-[#1f1f1f] rounded-lg p-6 max-w-2xl mx-auto\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-2xl font-bold text-white\">Профиль</h2>\n            <div className=\"flex gap-4\">\n              <button\n                onClick={handleBack}\n                className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\"\n              >\n                Назад\n              </button>\n              <button\n                onClick={handleLogout}\n                disabled={isLoading}\n                className={`bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2`}\n              >\n                {isLoading ? (\n                  <>\n                    <svg className=\"animate-spin h-5 w-5\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" />\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938л3-2.647z\" />\n                    </svg>\n                    Выход...\n                  </>\n                ) : (\n                  'Выйти'\n                )}\n              </button>\n            </div>\n          </div>\n\n          <div className=\"space-y-6\">\n            {/* Основная информация */}\n            <div className=\"flex items-start gap-6\">\n              <div className=\"relative\">\n                <img\n                  src={user?.photoURL || 'https://via.placeholder.com/100'}\n                  alt=\"Аватар\"\n                  className={`w-24 h-24 rounded-full object-cover cursor-pointer ${isAvatarLoading ? 'opacity-50' : ''}`}\n                  onClick={handleAvatarClick}\n                />\n                {isAvatarLoading && (\n                  <div className=\"absolute inset-0 flex items-center justify-center\">\n                    <svg className=\"animate-spin h-8 w-8 text-white\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" />\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938л3-2.647z\" />\n                    </svg>\n                  </div>\n                )}\n                <input\n                  type=\"file\"\n                  ref={fileInputRef}\n                  onChange={handleFileChange}\n                  accept=\"image/*\"\n                  className=\"hidden\"\n                />\n              </div>\n\n              <div className=\"flex-1\">\n                {isEditing ? (\n                  <div className=\"space-y-4\">\n                    <input\n                      type=\"text\"\n                      value={userInfo.displayName}\n                      onChange={(e) => setUserInfo({ ...userInfo, displayName: e.target.value })}\n                      className=\"w-full bg-[#2d2d2d] text-white p-2 rounded\"\n                      placeholder=\"Имя пользователя\"\n                    />\n                    <textarea\n                      value={userInfo.about}\n                      onChange={(e) => setUserInfo({ ...userInfo, about: e.target.value })}\n                      className=\"w-full bg-[#2d2d2d] text-white p-2 rounded h-24\"\n                      placeholder=\"О себе\"\n                    />\n                    <div>\n                      <input\n                        type=\"text\"\n                        value={userInfo.skills.join(', ')}\n                        onChange={(e) => setUserInfo({ ...userInfo, skills: e.target.value.split(',').map(s => s.trim()) })}\n                        className=\"w-full bg-[#2d2d2d] text-white p-2 rounded\"\n                        placeholder=\"Навыки (через запятую)\"\n                      />\n                    </div>\n                    <div className=\"flex gap-4\">\n                      <button\n                        onClick={handleSaveProfile}\n                        className=\"bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700\"\n                      >\n                        Сохранить\n                      </button>\n                      <button\n                        onClick={() => setIsEditing(false)}\n                        className=\"bg-gray-600 text-white px-6 py-2 rounded hover:bg-gray-700\"\n                      >\n                        Отмена\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    <div className=\"bg-[#2d2d2d] rounded-lg p-4\">\n                      <table className=\"w-full text-white\">\n                        <tbody>\n                          <tr>\n                            <td className=\"py-2 text-gray-400 w-1/3\">Имя:</td>\n                            <td className=\"py-2\">{userData?.displayName || 'Не указано'}</td>\n                          </tr>\n                          <tr>\n                            <td className=\"py-2 text-gray-400\">Email:</td>\n                            <td className=\"py-2\">{userData?.email || user?.email}</td>\n                          </tr>\n                          <tr>\n                            <td className=\"py-2 text-gray-400\">О себе:</td>\n                            <td className=\"py-2\">{userData?.about || 'Не указано'}</td>\n                          </tr>\n                          <tr>\n                            <td className=\"py-2 text-gray-400\">Навыки:</td>\n                            <td className=\"py-2\">\n                              {userData?.skills?.length ? (\n                                <div className=\"flex flex-wrap gap-2\">\n                                  {userData.skills.map((skill, index) => (\n                                    <span \n                                      key={index}\n                                      className=\"bg-blue-600 px-2 py-1 rounded-full text-sm\"\n                                    >\n                                      {skill}\n                                    </span>\n                                  ))}\n                                </div>\n                              ) : 'Не указаны'}\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                    <button\n                      onClick={() => setIsEditing(true)}\n                      className=\"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 mt-4\"\n                    >\n                      Редактировать\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Смена пароля */}\n            <div className=\"w-full border-t border-gray-700 pt-4\">\n              <h3 className=\"text-white text-lg mb-4\">Безопасность</h3>\n              <div className=\"flex gap-4\">\n                <input\n                  type=\"password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  className=\"flex-1 bg-[#2d2d2d] text-white p-2 rounded\"\n                  placeholder=\"Новый пароль\"\n                />\n                <button\n                  onClick={handleChangePassword}\n                  className=\"bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700\"\n                >\n                  Сменить пароль\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;","import { uploadImageToCloudinary } from './cloudinaryService';\nimport { updateUserAvatar } from './databaseService';\n\nexport const uploadUserAvatar = async (userId, file) => {\n  try {\n    // Загружаем в Cloudinary\n    const cloudinaryResult = await uploadImageToCloudinary(file, userId);\n    \n    // Сохраняем информацию в базе данных\n    const result = await updateUserAvatar(userId, cloudinaryResult);\n    \n    return result.url;\n  } catch (error) {\n    console.error('Ошибка при загрузке аватара:', error);\n    throw error;\n  }\n};"],"names":["AVATAR_CONFIG","maxWidth","maxHeight","quality","maxFileSize","acceptedTypes","uploadImageToCloudinary","async","file","userId","size","Error","includes","type","optimizedFile","Promise","resolve","reader","FileReader","readAsDataURL","onload","e","img","Image","src","target","result","canvas","document","createElement","width","height","getContext","drawImage","toBlob","blob","File","name","lastModified","Date","now","optimizeImage","formData","FormData","append","response","fetch","method","body","ok","data","json","url","secure_url","publicId","public_id","error","console","_ref","message","onClose","duration","useEffect","timer","setTimeout","clearTimeout","bgColor","_jsx","className","children","Profile","_user$additionalData","_user$additionalData2","_userData$skills","user","logout","updateUserProfile","updateUserPassword","useAuth","navigate","useNavigate","isEditing","setIsEditing","useState","userInfo","setUserInfo","displayName","about","additionalData","skills","userData","setUserData","newPassword","setNewPassword","toast","setToast","show","isLoading","setIsLoading","isAvatarLoading","setIsAvatarLoading","fileInputRef","useRef","unsubscribe","subscribeToUserData","uid","prev","showToast","arguments","length","undefined","_jsxs","Toast","hideToast","onClick","handleBack","err","disabled","_Fragment","viewBox","cx","cy","r","stroke","strokeWidth","fill","d","photoURL","alt","handleAvatarClick","current","click","ref","onChange","files","cloudinaryResult","updateUserAvatar","uploadUserAvatar","accept","value","placeholder","join","split","map","s","trim","email","skill","index","Auth","isOpen"],"sourceRoot":""}