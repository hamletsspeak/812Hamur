{"version":3,"file":"static/js/879.6fce00c7.chunk.js","mappings":"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","sources":["services/githubService.js","Projects.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst GITHUB_USERNAME = 'hamletsspeak';\r\nconst GITHUB_API_URL = 'https://api.github.com';\r\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 минут в миллисекундах\r\n\r\nclass Cache {\r\n  constructor() {\r\n    this.data = new Map();\r\n  }\r\n\r\n  set(key, value) {\r\n    this.data.set(key, {\r\n      value,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  get(key) {\r\n    const item = this.data.get(key);\r\n    if (!item) return null;\r\n    \r\n    const isExpired = Date.now() - item.timestamp > CACHE_DURATION;\r\n    if (isExpired) {\r\n      this.data.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    return item.value;\r\n  }\r\n}\r\n\r\nconst cache = new Cache();\r\n\r\nexport const getRepositories = async () => {\r\n  try {\r\n    const cachedData = cache.get('repositories');\r\n    if (cachedData) return cachedData;\r\n\r\n    console.log('Fetching repositories...');\r\n    const response = await axios.get(`${GITHUB_API_URL}/users/${GITHUB_USERNAME}/repos`, {\r\n      headers: {\r\n        'Accept': 'application/vnd.github.v3+json',\r\n        'If-None-Match': localStorage.getItem('reposEtag'),\r\n        // Добавляем заголовок для увеличения лимита запросов\r\n        'Authorization': `token ${process.env.REACT_APP_GITHUB_TOKEN}`\r\n      }\r\n    });\r\n\r\n    console.log('Response status:', response.status);\r\n    console.log('Repositories count:', response.data.length);\r\n\r\n    if (response.status === 200) {\r\n      const processedData = response.data\r\n        .filter(repo => !repo.fork && !repo.private)\r\n        .map(repo => ({\r\n          name: repo.name,\r\n          link: repo.html_url,\r\n          stars: repo.stargazers_count,\r\n          language: repo.language,\r\n          updatedAt: new Date(repo.updated_at),\r\n          description: repo.description || 'Нет описания'\r\n        }))\r\n        .sort((a, b) => b.updatedAt - a.updatedAt);\r\n\r\n      cache.set('repositories', processedData);\r\n      return processedData;\r\n    }\r\n    return [];\r\n  } catch (error) {\r\n    console.error('Error fetching repositories:', error.response || error);\r\n    if (error.response?.status === 403) {\r\n      console.log('Rate limit exceeded, checking remaining:', error.response.headers['x-ratelimit-remaining']);\r\n    }\r\n    return [];\r\n  }\r\n};","import React, { useState, useEffect, useMemo, memo } from 'react';\r\nimport { m, scaleUpVariant } from './config/animations';\r\nimport { getRepositories } from './services/githubService';\r\n\r\n// Мемоизированный компонент проекта\r\nconst ProjectCard = memo(({ project, onViewGithub }) => (\r\n  <m.div\r\n    variants={scaleUpVariant}\r\n    initial=\"hidden\"\r\n    animate=\"visible\"\r\n    exit={{ opacity: 0, y: -30 }}\r\n    className=\"bg-[#222] text-white rounded-lg shadow-lg p-6 w-full max-w-md border border-white/10\"\r\n  >\r\n    <h3 className=\"text-2xl font-bold mb-2\">{project.name}</h3>\r\n    <p className=\"mt-2 text-gray-300\">{project.description}</p>\r\n    {project.language && (\r\n      <p className=\"mt-2 text-blue-400\">Технология: {project.language}</p>\r\n    )}\r\n    {project.stars > 0 && (\r\n      <p className=\"mt-2 text-yellow-400\">⭐ {project.stars}</p>\r\n    )}\r\n    <button\r\n      onClick={() => onViewGithub(project.link)}\r\n      className=\"mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition-colors\"\r\n    >\r\n      Смотреть на GitHub\r\n    </button>\r\n  </m.div>\r\n));\r\n\r\nProjectCard.displayName = 'ProjectCard';\r\n\r\nconst Projects = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const fetchProjects = async () => {\r\n      try {\r\n        console.log('Начинаем загрузку проектов...');\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        const repos = await getRepositories();\r\n        \r\n        if (isMounted && repos.length > 0) {\r\n          console.log('Проекты успешно загружены:', repos.length);\r\n          setProjects(repos);\r\n          setLoading(false);\r\n        } else if (isMounted) {\r\n          console.log('Нет доступных проектов');\r\n          setError('Проекты не найдены');\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.error('Ошибка при загрузке проектов:', err);\r\n        if (isMounted) {\r\n          setError('Не удалось загрузить проекты. Попробуйте позже.');\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (projects.length > 0) {\r\n      const interval = setInterval(() => {\r\n        setCurrent(prev => (prev + 1) % projects.length);\r\n      }, 10000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [projects.length]);\r\n\r\n  const handleViewGithub = (link) => {\r\n    window.open(link, '_blank', 'noopener,noreferrer');\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setCurrent(prev => (prev - 1 + projects.length) % projects.length);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrent(prev => (prev + 1) % projects.length);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center px-6\">\r\n        <div className=\"space-y-4 w-full max-w-md\">\r\n          <div className=\"h-8 bg-gray-700 rounded-lg animate-pulse\"></div>\r\n          <div className=\"h-32 bg-gray-700 rounded-lg animate-pulse\"></div>\r\n          <div className=\"flex justify-center gap-4 mt-4\">\r\n            <div className=\"h-10 w-20 bg-gray-700 rounded animate-pulse\"></div>\r\n            <div className=\"h-10 w-20 bg-gray-700 rounded animate-pulse\"></div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <section id=\"projects\" className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center px-6\">\r\n        <h2 className=\"text-4xl font-bold mb-8 shimmer-text\">Мои проекты</h2>\r\n        <div className=\"text-red-400 mb-4\">{error}</div>\r\n        <button\r\n          onClick={() => window.location.reload()}\r\n          className=\"bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600 transition-colors\"\r\n        >\r\n          Попробовать снова\r\n        </button>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section\r\n      id=\"projects\"\r\n      className=\"snap-start min-h-screen bg-[#121212] text-white flex flex-col items-center justify-center px-6\"\r\n    >\r\n      <div className=\"w-full max-w-4xl\">\r\n        <h2 className=\"text-4xl font-bold mb-8 text-center shimmer-text\">\r\n          Мои проекты\r\n        </h2>\r\n        \r\n        <div className=\"flex flex-col items-center\">\r\n          {projects.length > 0 ? (\r\n            <>\r\n              <ProjectCard\r\n                project={projects[current]}\r\n                onViewGithub={handleViewGithub}\r\n              />\r\n              \r\n              <div className=\"flex items-center gap-6 mt-8\">\r\n                <button\r\n                  onClick={handlePrev}\r\n                  className=\"bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600 transition-colors\"\r\n                >\r\n                  ←\r\n                </button>\r\n                <span className=\"text-lg\">\r\n                  {current + 1} / {projects.length}\r\n                </span>\r\n                <button\r\n                  onClick={handleNext}\r\n                  className=\"bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600 transition-colors\"\r\n                >\r\n                  →\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p className=\"text-gray-400\">Проекты не найдены</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default memo(Projects);\r\n"],"names":["cache","constructor","this","data","Map","set","key","value","timestamp","Date","now","get","item","delete","ProjectCard","memo","_ref","project","onViewGithub","_jsxs","m","div","variants","scaleUpVariant","initial","animate","exit","opacity","y","className","children","_jsx","name","description","language","stars","onClick","link","displayName","Projects","current","setCurrent","useState","projects","setProjects","loading","setLoading","error","setError","useEffect","isMounted","async","console","log","repos","cachedData","response","axios","headers","localStorage","getItem","status","length","processedData","filter","repo","fork","private","map","html_url","stargazers_count","updatedAt","updated_at","sort","a","b","_error$response","getRepositories","err","fetchProjects","interval","setInterval","prev","clearInterval","id","window","location","reload","_Fragment","open","handlePrev","handleNext"],"sourceRoot":""}